{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Paper,Typography,Button,TextField,IconButton,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TablePagination,Tooltip,Chip,Dialog,DialogActions,DialogContent,DialogTitle,FormControl,InputLabel,Select,MenuItem,Grid,Switch,FormControlLabel,Divider,CircularProgress,Alert,useTheme,InputAdornment,List,ListItem,ListItemText,ListItemIcon,ListItemSecondaryAction,Autocomplete}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,Search as SearchIcon,Inbox as InboxIcon,Business as DepartmentIcon,Person as UserIcon,Workflow as WorkflowIcon,Settings as SystemIcon,Email as EmailIcon,Notifications as NotificationIcon,People as PeopleIcon,DeleteSweep as ClearIcon}from'@mui/icons-material';import{format}from'date-fns';import{de}from'date-fns/locale';import api from'../../services/api';// Postkorb-Typen mit Icons und Farben\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const inboxTypes={department:{label:'Abteilung',icon:/*#__PURE__*/_jsx(DepartmentIcon,{}),color:'#2196f3',description:'Postkorb für eine Abteilung oder einen Bereich'},user:{label:'Benutzer',icon:/*#__PURE__*/_jsx(UserIcon,{}),color:'#4caf50',description:'Persönlicher Postkorb für einen Benutzer'},workflow:{label:'Workflow',icon:/*#__PURE__*/_jsx(WorkflowIcon,{}),color:'#ff9800',description:'Postkorb für einen bestimmten Workflow oder Prozess'},system:{label:'System',icon:/*#__PURE__*/_jsx(SystemIcon,{}),color:'#9c27b0',description:'Systempostkorb für automatisierte Prozesse'}};// Generieren von Dummy-Postkörben\nconst generateDummyInboxes=()=>{const inboxes=[{_id:'inbox1',name:'Eingang',description:'Allgemeiner Posteingang für neue Dokumente',type:'department',assignedUsers:[{_id:'user1',name:'Max Mustermann'},{_id:'user2',name:'Erika Musterfrau'}],documentCount:28,notificationSettings:{emailNotification:{enabled:true,recipients:['team@example.com']},autoAssign:{enabled:false,assignmentStrategy:'manual'}},isActive:true,createdAt:new Date('2023-01-01'),createdBy:{_id:'admin1',name:'Administrator'}},{_id:'inbox2',name:'Rechnungswesen',description:'Dokumente für die Buchhaltung und Finanzen',type:'department',assignedUsers:[{_id:'user3',name:'Thomas Test'},{_id:'user4',name:'Sabine Schmidt'}],documentCount:15,notificationSettings:{emailNotification:{enabled:true,recipients:['finance@example.com']},autoAssign:{enabled:true,assignmentStrategy:'round_robin'}},isActive:true,createdAt:new Date('2023-01-10'),createdBy:{_id:'admin1',name:'Administrator'}},{_id:'inbox3',name:'Vertrieb',description:'Dokumente für den Vertrieb und Aufträge',type:'department',assignedUsers:[{_id:'user5',name:'Peter Peters'},{_id:'user6',name:'Laura Lang'}],documentCount:22,notificationSettings:{emailNotification:{enabled:true,recipients:['sales@example.com']},autoAssign:{enabled:false,assignmentStrategy:'manual'}},isActive:true,createdAt:new Date('2023-01-15'),createdBy:{_id:'admin1',name:'Administrator'}}];// Weitere Postkörbe generieren\nconst departments=['Einkauf','Personal','IT','Marketing','Kundenservice','Produktion'];const types=['department','workflow','user','system'];for(let i=1;i<=15;i++){const type=types[Math.floor(Math.random()*types.length)];const createdDate=new Date();createdDate.setDate(createdDate.getDate()-Math.floor(Math.random()*365));inboxes.push({_id:`inbox${i+3}`,name:type==='department'?departments[Math.floor(Math.random()*departments.length)]:type==='workflow'?`Workflow ${i}`:type==='user'?`Persönlicher Postkorb ${i}`:`System ${i}`,description:`Beschreibung für ${type==='department'?'Abteilung':type==='workflow'?'Workflow':type==='user'?'Benutzer':'System'} ${i}`,type,assignedUsers:[{_id:`user${i*2-1}`,name:`Benutzer ${i*2-1}`},{_id:`user${i*2}`,name:`Benutzer ${i*2}`}].slice(0,Math.floor(Math.random()*3)+1),// 1-3 Benutzer\ndocumentCount:Math.floor(Math.random()*30),notificationSettings:{emailNotification:{enabled:Math.random()>0.3,recipients:[`${type}${i}@example.com`]},autoAssign:{enabled:Math.random()>0.7,assignmentStrategy:['manual','round_robin','workload_balanced'][Math.floor(Math.random()*3)]}},isActive:Math.random()>0.1,// 90% aktiv\ncreatedAt:createdDate,createdBy:{_id:'admin1',name:'Administrator'}});}return inboxes;};// Dummy-Benutzer für Zuweisungen\nconst generateDummyUsers=()=>[{_id:'user1',name:'Max Mustermann'},{_id:'user2',name:'Erika Musterfrau'},{_id:'user3',name:'Thomas Test'},{_id:'user4',name:'Sabine Schmidt'},{_id:'user5',name:'Peter Peters'},{_id:'user6',name:'Laura Lang'},{_id:'user7',name:'Michael Müller'},{_id:'user8',name:'Sandra Schmitz'},{_id:'user9',name:'Tobias Tester'},{_id:'user10',name:'Nina Neumann'}];const InboxManagement=()=>{var _inboxTypes$formData$,_inboxTypes$formData$2;const theme=useTheme();// State für Postkorbliste\nconst[inboxes,setInboxes]=useState([]);const[filteredInboxes,setFilteredInboxes]=useState([]);const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Pagination-State\nconst[page,setPage]=useState(0);const[rowsPerPage,setRowsPerPage]=useState(10);// Such- und Filter-State\nconst[searchTerm,setSearchTerm]=useState('');const[typeFilter,setTypeFilter]=useState('');const[statusFilter,setStatusFilter]=useState('');// Dialog-States\nconst[createDialogOpen,setCreateDialogOpen]=useState(false);const[editDialogOpen,setEditDialogOpen]=useState(false);const[deleteDialogOpen,setDeleteDialogOpen]=useState(false);const[emptyDialogOpen,setEmptyDialogOpen]=useState(false);// Ausgewählter Postkorb für Dialoge\nconst[selectedInbox,setSelectedInbox]=useState(null);// Formular-Daten für neuen Postkorb\nconst[formData,setFormData]=useState({name:'',description:'',type:'department',assignedUsers:[],notificationSettings:{emailNotification:{enabled:false,recipients:[]},autoAssign:{enabled:false,assignmentStrategy:'manual'}},isActive:true});// E-Mail-Eingabefeld\nconst[emailInput,setEmailInput]=useState('');// Daten laden\nuseEffect(()=>{const fetchData=async()=>{try{// In einer realen App würden die Daten von der API geladen werden\n// const inboxResponse = await api.get('/api/inboxes');\n// const userResponse = await api.get('/api/users');\n// Für Demo-Zwecke verwenden wir Dummy-Daten\nsetTimeout(()=>{const dummyInboxes=generateDummyInboxes();const dummyUsers=generateDummyUsers();setInboxes(dummyInboxes);setFilteredInboxes(dummyInboxes);setUsers(dummyUsers);setLoading(false);},1000);}catch(error){console.error('Fehler beim Laden der Daten:',error);setError('Fehler beim Laden der Daten. Bitte versuchen Sie es später erneut.');setLoading(false);}};fetchData();},[]);// Postkörbe filtern\nuseEffect(()=>{if(!inboxes.length)return;let filtered=[...inboxes];// Textsuche\nif(searchTerm){const searchLower=searchTerm.toLowerCase();filtered=filtered.filter(inbox=>inbox.name.toLowerCase().includes(searchLower)||inbox.description.toLowerCase().includes(searchLower)||inbox.assignedUsers.some(user=>user.name.toLowerCase().includes(searchLower)));}// Typenfilter\nif(typeFilter){filtered=filtered.filter(inbox=>inbox.type===typeFilter);}// Statusfilter\nif(statusFilter==='active'){filtered=filtered.filter(inbox=>inbox.isActive);}else if(statusFilter==='inactive'){filtered=filtered.filter(inbox=>!inbox.isActive);}setFilteredInboxes(filtered);setPage(0);// Zurück zur ersten Seite bei Filteränderung\n},[inboxes,searchTerm,typeFilter,statusFilter]);// Such-Handler\nconst handleSearchChange=event=>{setSearchTerm(event.target.value);};// Pagination-Handler\nconst handleChangePage=(event,newPage)=>{setPage(newPage);};const handleChangeRowsPerPage=event=>{setRowsPerPage(parseInt(event.target.value,10));setPage(0);};// Formular-Handler\nconst handleInputChange=event=>{const{name,value,type,checked}=event.target;if(name.startsWith('notificationSettings.')){const path=name.split('.');setFormData({...formData,notificationSettings:{...formData.notificationSettings,[path[1]]:{...formData.notificationSettings[path[1]],[path[2]]:type==='checkbox'?checked:value}}});}else{setFormData({...formData,[name]:type==='checkbox'?checked:value});}};// E-Mail hinzufügen\nconst handleAddEmail=()=>{if(!emailInput||!emailInput.includes('@'))return;const newRecipients=[...formData.notificationSettings.emailNotification.recipients];if(!newRecipients.includes(emailInput)){newRecipients.push(emailInput);setFormData({...formData,notificationSettings:{...formData.notificationSettings,emailNotification:{...formData.notificationSettings.emailNotification,recipients:newRecipients}}});}setEmailInput('');};// E-Mail entfernen\nconst handleRemoveEmail=email=>{const newRecipients=formData.notificationSettings.emailNotification.recipients.filter(recipient=>recipient!==email);setFormData({...formData,notificationSettings:{...formData.notificationSettings,emailNotification:{...formData.notificationSettings.emailNotification,recipients:newRecipients}}});};// Benutzer-Handler\nconst handleUserChange=(event,newValue)=>{setFormData({...formData,assignedUsers:newValue});};// Dialog-Handler\nconst handleOpenCreateDialog=()=>{setFormData({name:'',description:'',type:'department',assignedUsers:[],notificationSettings:{emailNotification:{enabled:false,recipients:[]},autoAssign:{enabled:false,assignmentStrategy:'manual'}},isActive:true});setCreateDialogOpen(true);};const handleCloseCreateDialog=()=>{setCreateDialogOpen(false);};const handleOpenEditDialog=inbox=>{setSelectedInbox(inbox);setFormData({name:inbox.name,description:inbox.description,type:inbox.type,assignedUsers:inbox.assignedUsers,notificationSettings:{emailNotification:{enabled:inbox.notificationSettings.emailNotification.enabled,recipients:[...inbox.notificationSettings.emailNotification.recipients]},autoAssign:{enabled:inbox.notificationSettings.autoAssign.enabled,assignmentStrategy:inbox.notificationSettings.autoAssign.assignmentStrategy}},isActive:inbox.isActive});setEditDialogOpen(true);};const handleCloseEditDialog=()=>{setEditDialogOpen(false);setSelectedInbox(null);};const handleOpenDeleteDialog=inbox=>{setSelectedInbox(inbox);setDeleteDialogOpen(true);};const handleCloseDeleteDialog=()=>{setDeleteDialogOpen(false);setSelectedInbox(null);};const handleOpenEmptyDialog=inbox=>{setSelectedInbox(inbox);setEmptyDialogOpen(true);};const handleCloseEmptyDialog=()=>{setEmptyDialogOpen(false);setSelectedInbox(null);};// CRUD-Operationen\nconst handleCreateInbox=()=>{// In einer realen App würde hier ein API-Aufruf gemacht werden\n// await api.post('/api/inboxes', formData);\n// Für Demo-Zwecke fügen wir den Postkorb lokal hinzu\nconst newInbox={_id:`inbox${Date.now()}`,...formData,documentCount:0,createdAt:new Date(),createdBy:{_id:'admin1',name:'Administrator'}};setInboxes([...inboxes,newInbox]);handleCloseCreateDialog();// Erfolgsmeldung\nalert('Postkorb erfolgreich erstellt');};const handleUpdateInbox=()=>{// In einer realen App würde hier ein API-Aufruf gemacht werden\n// await api.put(`/api/inboxes/${selectedInbox._id}`, formData);\n// Für Demo-Zwecke aktualisieren wir den Postkorb lokal\nconst updatedInboxes=inboxes.map(inbox=>{if(inbox._id===selectedInbox._id){return{...inbox,name:formData.name,description:formData.description,type:formData.type,assignedUsers:formData.assignedUsers,notificationSettings:formData.notificationSettings,isActive:formData.isActive};}return inbox;});setInboxes(updatedInboxes);handleCloseEditDialog();// Erfolgsmeldung\nalert('Postkorb erfolgreich aktualisiert');};const handleDeleteInbox=()=>{// In einer realen App würde hier ein API-Aufruf gemacht werden\n// await api.delete(`/api/inboxes/${selectedInbox._id}`);\n// Für Demo-Zwecke entfernen wir den Postkorb lokal\nconst updatedInboxes=inboxes.filter(inbox=>inbox._id!==selectedInbox._id);setInboxes(updatedInboxes);handleCloseDeleteDialog();// Erfolgsmeldung\nalert('Postkorb erfolgreich gelöscht');};const handleEmptyInbox=()=>{// In einer realen App würde hier ein API-Aufruf gemacht werden\n// await api.post(`/api/inboxes/${selectedInbox._id}/empty`);\n// Für Demo-Zwecke setzen wir die Dokumentenzahl auf 0\nconst updatedInboxes=inboxes.map(inbox=>{if(inbox._id===selectedInbox._id){return{...inbox,documentCount:0};}return inbox;});setInboxes(updatedInboxes);handleCloseEmptyDialog();// Erfolgsmeldung\nalert(`Postkorb \"${selectedInbox.name}\" wurde geleert`);};const handleToggleInboxStatus=inbox=>{// In einer realen App würde hier ein API-Aufruf gemacht werden\n// await api.put(`/api/inboxes/${inbox._id}/toggle-status`);\n// Für Demo-Zwecke aktualisieren wir den Status lokal\nconst updatedInboxes=inboxes.map(i=>{if(i._id===inbox._id){return{...i,isActive:!i.isActive};}return i;});setInboxes(updatedInboxes);// Erfolgsmeldung\nalert(`Postkorb \"${inbox.name}\" wurde ${inbox.isActive?'deaktiviert':'aktiviert'}`);};// Hilfsfunktionen\nconst formatDate=date=>{if(!date)return'-';try{return format(new Date(date),'dd.MM.yyyy',{locale:de});}catch(error){return'Ungültiges Datum';}};// Typ als Chip darstellen\nconst renderTypeChip=type=>{const typeInfo=inboxTypes[type]||{label:type,color:'#757575',icon:/*#__PURE__*/_jsx(InboxIcon,{})};return/*#__PURE__*/_jsx(Chip,{icon:typeInfo.icon,label:typeInfo.label,size:\"small\",sx:{backgroundColor:`${typeInfo.color}20`,color:typeInfo.color,'& .MuiChip-icon':{color:typeInfo.color}}});};// Status als Chip darstellen\nconst renderStatusChip=active=>{return/*#__PURE__*/_jsx(Chip,{label:active?'Aktiv':'Inaktiv',size:\"small\",color:active?'success':'default',variant:active?'filled':'outlined'});};// Zugewiesene Benutzer anzeigen\nconst renderAssignedUsers=assignedUsers=>{if(!assignedUsers||assignedUsers.length===0){return/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Keine\"});}return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5},children:assignedUsers.map(user=>/*#__PURE__*/_jsx(Chip,{label:user.name,size:\"small\",icon:/*#__PURE__*/_jsx(UserIcon,{})},user._id))});};// Benachrichtigungseinstellungen anzeigen\nconst renderNotificationSettings=settings=>{var _settings$emailNotifi,_settings$autoAssign;if(!settings)return null;return/*#__PURE__*/_jsxs(Box,{children:[((_settings$emailNotifi=settings.emailNotification)===null||_settings$emailNotifi===void 0?void 0:_settings$emailNotifi.enabled)&&/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(EmailIcon,{}),label:\"E-Mail-Benachrichtigung\",size:\"small\",color:\"primary\",sx:{mr:0.5}}),((_settings$autoAssign=settings.autoAssign)===null||_settings$autoAssign===void 0?void 0:_settings$autoAssign.enabled)&&/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(PeopleIcon,{}),label:\"Auto-Zuweisung\",size:\"small\",color:\"secondary\"})]});};// Paginierte Postkörbe\nconst paginatedInboxes=filteredInboxes.slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage);// Leere Zeilen für Pagination\nconst emptyRows=rowsPerPage-Math.min(rowsPerPage,filteredInboxes.length-page*rowsPerPage);return/*#__PURE__*/_jsxs(Box,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:3,display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:\"Postkorb-Verwaltung\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:handleOpenCreateDialog,children:\"Neuer Postkorb\"})]}),/*#__PURE__*/_jsx(Paper,{sx:{p:2,mb:3},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,placeholder:\"Suchen...\",value:searchTerm,onChange:handleSearchChange,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(SearchIcon,{})})},size:\"small\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Typ\"}),/*#__PURE__*/_jsxs(Select,{value:typeFilter,onChange:e=>setTypeFilter(e.target.value),label:\"Typ\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"Alle Typen\"}),Object.entries(inboxTypes).map(_ref=>{let[key,{label}]=_ref;return/*#__PURE__*/_jsx(MenuItem,{value:key,children:label},key);})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{value:statusFilter,onChange:e=>setStatusFilter(e.target.value),label:\"Status\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"Alle Status\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"active\",children:\"Aktiv\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"inactive\",children:\"Inaktiv\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:2,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"outlined\",onClick:()=>{setSearchTerm('');setTypeFilter('');setStatusFilter('');},children:\"Filter zur\\xFCcksetzen\"})})]})}),/*#__PURE__*/_jsx(Paper,{sx:{width:'100%',overflow:'hidden'},children:loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:4},children:/*#__PURE__*/_jsx(CircularProgress,{})}):error?/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{m:2},children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TableContainer,{sx:{maxHeight:'calc(100vh - 300px)'},children:/*#__PURE__*/_jsxs(Table,{stickyHeader:true,children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Beschreibung\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Typ\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Benutzer\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Dokumente\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Benachrichtigungen\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Erstellt am\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Aktionen\"})]})}),/*#__PURE__*/_jsxs(TableBody,{children:[paginatedInboxes.map(inbox=>/*#__PURE__*/_jsxs(TableRow,{hover:true,sx:{'&:hover':{backgroundColor:'action.hover'}},children:[/*#__PURE__*/_jsx(TableCell,{children:inbox.name}),/*#__PURE__*/_jsx(TableCell,{children:inbox.description}),/*#__PURE__*/_jsx(TableCell,{children:renderTypeChip(inbox.type)}),/*#__PURE__*/_jsx(TableCell,{children:renderAssignedUsers(inbox.assignedUsers)}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:inbox.documentCount})}),/*#__PURE__*/_jsx(TableCell,{children:renderNotificationSettings(inbox.notificationSettings)}),/*#__PURE__*/_jsx(TableCell,{children:renderStatusChip(inbox.isActive)}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(inbox.createdAt)}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'flex-end'},children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Bearbeiten\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenEditDialog(inbox),size:\"small\",children:/*#__PURE__*/_jsx(EditIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Postkorb leeren\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenEmptyDialog(inbox),size:\"small\",disabled:inbox.documentCount===0,children:/*#__PURE__*/_jsx(ClearIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:inbox.isActive?'Deaktivieren':'Aktivieren',children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleToggleInboxStatus(inbox),size:\"small\",color:inbox.isActive?'default':'primary',children:inbox.isActive?/*#__PURE__*/_jsx(DeleteIcon,{}):/*#__PURE__*/_jsx(InboxIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"L\\xF6schen\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenDeleteDialog(inbox),size:\"small\",color:\"error\",children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]})})]},inbox._id)),emptyRows>0&&/*#__PURE__*/_jsx(TableRow,{style:{height:53*emptyRows},children:/*#__PURE__*/_jsx(TableCell,{colSpan:9})}),filteredInboxes.length===0&&/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:9,align:\"center\",sx:{py:3},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsx(InboxIcon,{sx:{fontSize:50,color:'text.secondary',mb:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",children:\"Keine Postk\\xF6rbe gefunden\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Versuchen Sie, Ihre Suchkriterien anzupassen\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>{setSearchTerm('');setTypeFilter('');setStatusFilter('');},sx:{mt:2},children:\"Filter zur\\xFCcksetzen\"})]})})})]})]})}),/*#__PURE__*/_jsx(TablePagination,{rowsPerPageOptions:[5,10,25,50],component:\"div\",count:filteredInboxes.length,rowsPerPage:rowsPerPage,page:page,onPageChange:handleChangePage,onRowsPerPageChange:handleChangeRowsPerPage,labelRowsPerPage:\"Zeilen pro Seite:\",labelDisplayedRows:_ref2=>{let{from,to,count}=_ref2;return`${from}-${to} von ${count!==-1?count:`mehr als ${to}`}`;}})]})}),/*#__PURE__*/_jsxs(Dialog,{open:createDialogOpen,onClose:handleCloseCreateDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Neuen Postkorb erstellen\"}),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Name\",name:\"name\",value:formData.name,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Beschreibung\",name:\"description\",value:formData.description,onChange:handleInputChange,multiline:true,rows:3,sx:{mb:2}}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Typ\"}),/*#__PURE__*/_jsx(Select,{name:\"type\",value:formData.type,onChange:handleInputChange,label:\"Typ\",children:Object.entries(inboxTypes).map(_ref3=>{let[key,{label}]=_ref3;return/*#__PURE__*/_jsx(MenuItem,{value:key,children:label},key);})})]}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"isActive\",checked:formData.isActive,onChange:handleInputChange,color:\"primary\"}),label:\"Postkorb ist aktiv\"})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Benutzer zuweisen\"}),/*#__PURE__*/_jsx(Autocomplete,{multiple:true,id:\"assigned-users\",options:users,value:formData.assignedUsers,onChange:handleUserChange,getOptionLabel:option=>option.name,renderInput:params=>/*#__PURE__*/_jsx(TextField,{...params,variant:\"outlined\",label:\"Zugewiesene Benutzer\",placeholder:\"Benutzer hinzuf\\xFCgen\",fullWidth:true}),sx:{mb:3}}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Benachrichtigungseinstellungen\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"notificationSettings.emailNotification.enabled\",checked:formData.notificationSettings.emailNotification.enabled,onChange:handleInputChange,color:\"primary\"}),label:\"E-Mail-Benachrichtigung aktivieren\"}),formData.notificationSettings.emailNotification.enabled&&/*#__PURE__*/_jsxs(Box,{sx:{mt:1,mb:2},children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:9,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"E-Mail-Adresse\",value:emailInput,onChange:e=>setEmailInput(e.target.value),size:\"small\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleAddEmail,fullWidth:true,sx:{height:'100%'},children:\"Hinzuf\\xFCgen\"})})]}),/*#__PURE__*/_jsx(List,{dense:true,sx:{mt:1},children:formData.notificationSettings.emailNotification.recipients.map(email=>/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(EmailIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:email}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:()=>handleRemoveEmail(email),children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\"})})})]},email))})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"notificationSettings.autoAssign.enabled\",checked:formData.notificationSettings.autoAssign.enabled,onChange:handleInputChange,color:\"primary\"}),label:\"Automatische Zuweisung aktivieren\"}),formData.notificationSettings.autoAssign.enabled&&/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mt:1},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Zuweisungsstrategie\"}),/*#__PURE__*/_jsxs(Select,{name:\"notificationSettings.autoAssign.assignmentStrategy\",value:formData.notificationSettings.autoAssign.assignmentStrategy,onChange:handleInputChange,label:\"Zuweisungsstrategie\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"manual\",children:\"Manuell\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"round_robin\",children:\"Rundlauf (Round Robin)\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"workload_balanced\",children:\"Lastenausgleich\"})]})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Divider,{sx:{mt:2,mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Postkorb-Typ Information\"}),/*#__PURE__*/_jsx(Box,{sx:{pl:2,pr:2},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",gutterBottom:true,children:[/*#__PURE__*/_jsxs(\"strong\",{children:[(_inboxTypes$formData$=inboxTypes[formData.type])===null||_inboxTypes$formData$===void 0?void 0:_inboxTypes$formData$.label,\":\"]}),\" \",(_inboxTypes$formData$2=inboxTypes[formData.type])===null||_inboxTypes$formData$2===void 0?void 0:_inboxTypes$formData$2.description]})})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseCreateDialog,children:\"Abbrechen\"}),/*#__PURE__*/_jsx(Button,{onClick:handleCreateInbox,variant:\"contained\",disabled:!formData.name,children:\"Postkorb erstellen\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:editDialogOpen,onClose:handleCloseEditDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Postkorb bearbeiten\"}),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Name\",name:\"name\",value:formData.name,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Beschreibung\",name:\"description\",value:formData.description,onChange:handleInputChange,multiline:true,rows:3,sx:{mb:2}}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Typ\"}),/*#__PURE__*/_jsx(Select,{name:\"type\",value:formData.type,onChange:handleInputChange,label:\"Typ\",children:Object.entries(inboxTypes).map(_ref4=>{let[key,{label}]=_ref4;return/*#__PURE__*/_jsx(MenuItem,{value:key,children:label},key);})})]}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"isActive\",checked:formData.isActive,onChange:handleInputChange,color:\"primary\"}),label:\"Postkorb ist aktiv\"}),selectedInbox&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",gutterBottom:true,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Erstellt am:\"}),\" \",formatDate(selectedInbox.createdAt)]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",gutterBottom:true,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Erstellt von:\"}),\" \",selectedInbox.createdBy.name]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Dokumente:\"}),\" \",selectedInbox.documentCount]})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Benutzer zuweisen\"}),/*#__PURE__*/_jsx(Autocomplete,{multiple:true,id:\"assigned-users-edit\",options:users,value:formData.assignedUsers,onChange:handleUserChange,getOptionLabel:option=>option.name,renderInput:params=>/*#__PURE__*/_jsx(TextField,{...params,variant:\"outlined\",label:\"Zugewiesene Benutzer\",placeholder:\"Benutzer hinzuf\\xFCgen\",fullWidth:true}),sx:{mb:3}}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Benachrichtigungseinstellungen\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"notificationSettings.emailNotification.enabled\",checked:formData.notificationSettings.emailNotification.enabled,onChange:handleInputChange,color:\"primary\"}),label:\"E-Mail-Benachrichtigung aktivieren\"}),formData.notificationSettings.emailNotification.enabled&&/*#__PURE__*/_jsxs(Box,{sx:{mt:1,mb:2},children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:9,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"E-Mail-Adresse\",value:emailInput,onChange:e=>setEmailInput(e.target.value),size:\"small\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleAddEmail,fullWidth:true,sx:{height:'100%'},children:\"Hinzuf\\xFCgen\"})})]}),/*#__PURE__*/_jsx(List,{dense:true,sx:{mt:1},children:formData.notificationSettings.emailNotification.recipients.map(email=>/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(EmailIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:email}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:()=>handleRemoveEmail(email),children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\"})})})]},email))})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"notificationSettings.autoAssign.enabled\",checked:formData.notificationSettings.autoAssign.enabled,onChange:handleInputChange,color:\"primary\"}),label:\"Automatische Zuweisung aktivieren\"}),formData.notificationSettings.autoAssign.enabled&&/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mt:1},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Zuweisungsstrategie\"}),/*#__PURE__*/_jsxs(Select,{name:\"notificationSettings.autoAssign.assignmentStrategy\",value:formData.notificationSettings.autoAssign.assignmentStrategy,onChange:handleInputChange,label:\"Zuweisungsstrategie\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"manual\",children:\"Manuell\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"round_robin\",children:\"Rundlauf (Round Robin)\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"workload_balanced\",children:\"Lastenausgleich\"})]})]})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseEditDialog,children:\"Abbrechen\"}),/*#__PURE__*/_jsx(Button,{onClick:handleUpdateInbox,variant:\"contained\",disabled:!formData.name,children:\"Speichern\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:deleteDialogOpen,onClose:handleCloseDeleteDialog,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Postkorb l\\xF6schen\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Typography,{paragraph:true,children:[\"M\\xF6chten Sie den Postkorb \\\"\",selectedInbox===null||selectedInbox===void 0?void 0:selectedInbox.name,\"\\\" wirklich l\\xF6schen? Dieser Vorgang kann nicht r\\xFCckg\\xE4ngig gemacht werden.\"]}),selectedInbox&&selectedInbox.documentCount>0&&/*#__PURE__*/_jsxs(Alert,{severity:\"warning\",sx:{mt:2},children:[\"Dieser Postkorb enth\\xE4lt \",selectedInbox.documentCount,\" Dokumente, die beim L\\xF6schen des Postkorbs ebenfalls entfernt werden.\"]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDeleteDialog,children:\"Abbrechen\"}),/*#__PURE__*/_jsx(Button,{onClick:handleDeleteInbox,color:\"error\",children:\"L\\xF6schen\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:emptyDialogOpen,onClose:handleCloseEmptyDialog,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Postkorb leeren\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Typography,{paragraph:true,children:[\"M\\xF6chten Sie alle Dokumente aus dem Postkorb \\\"\",selectedInbox===null||selectedInbox===void 0?void 0:selectedInbox.name,\"\\\" entfernen? Dieser Vorgang kann nicht r\\xFCckg\\xE4ngig gemacht werden.\"]}),selectedInbox&&selectedInbox.documentCount>0&&/*#__PURE__*/_jsxs(Alert,{severity:\"warning\",sx:{mt:2},children:[\"Dieser Postkorb enth\\xE4lt \",selectedInbox.documentCount,\" Dokumente, die entfernt werden. Die Dokumente selbst werden nicht gel\\xF6scht, sondern nur aus dem Postkorb entfernt.\"]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseEmptyDialog,children:\"Abbrechen\"}),/*#__PURE__*/_jsx(Button,{onClick:handleEmptyInbox,color:\"warning\",children:\"Postkorb leeren\"})]})]})]});};export default InboxManagement;","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Button","TextField","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Tooltip","Chip","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","InputLabel","Select","MenuItem","Grid","Switch","FormControlLabel","Divider","CircularProgress","Alert","useTheme","InputAdornment","List","ListItem","ListItemText","ListItemIcon","ListItemSecondaryAction","Autocomplete","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Search","SearchIcon","Inbox","InboxIcon","Business","DepartmentIcon","Person","UserIcon","Workflow","WorkflowIcon","Settings","SystemIcon","Email","EmailIcon","Notifications","NotificationIcon","People","PeopleIcon","DeleteSweep","ClearIcon","format","de","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","inboxTypes","department","label","icon","color","description","user","workflow","system","generateDummyInboxes","inboxes","_id","name","type","assignedUsers","documentCount","notificationSettings","emailNotification","enabled","recipients","autoAssign","assignmentStrategy","isActive","createdAt","Date","createdBy","departments","types","i","Math","floor","random","length","createdDate","setDate","getDate","push","slice","generateDummyUsers","InboxManagement","_inboxTypes$formData$","_inboxTypes$formData$2","theme","setInboxes","filteredInboxes","setFilteredInboxes","users","setUsers","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","searchTerm","setSearchTerm","typeFilter","setTypeFilter","statusFilter","setStatusFilter","createDialogOpen","setCreateDialogOpen","editDialogOpen","setEditDialogOpen","deleteDialogOpen","setDeleteDialogOpen","emptyDialogOpen","setEmptyDialogOpen","selectedInbox","setSelectedInbox","formData","setFormData","emailInput","setEmailInput","fetchData","setTimeout","dummyInboxes","dummyUsers","console","filtered","searchLower","toLowerCase","filter","inbox","includes","some","handleSearchChange","event","target","value","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","handleInputChange","checked","startsWith","path","split","handleAddEmail","newRecipients","handleRemoveEmail","email","recipient","handleUserChange","newValue","handleOpenCreateDialog","handleCloseCreateDialog","handleOpenEditDialog","handleCloseEditDialog","handleOpenDeleteDialog","handleCloseDeleteDialog","handleOpenEmptyDialog","handleCloseEmptyDialog","handleCreateInbox","newInbox","now","alert","handleUpdateInbox","updatedInboxes","map","handleDeleteInbox","handleEmptyInbox","handleToggleInboxStatus","formatDate","date","locale","renderTypeChip","typeInfo","size","sx","backgroundColor","renderStatusChip","active","variant","renderAssignedUsers","children","display","flexWrap","gap","renderNotificationSettings","settings","_settings$emailNotifi","_settings$autoAssign","mr","paginatedInboxes","emptyRows","min","p","mb","justifyContent","alignItems","startIcon","onClick","container","spacing","item","xs","md","fullWidth","placeholder","onChange","InputProps","startAdornment","position","e","Object","entries","_ref","key","width","overflow","severity","m","maxHeight","stickyHeader","align","hover","title","disabled","style","height","colSpan","py","flexDirection","fontSize","mt","rowsPerPageOptions","component","count","onPageChange","onRowsPerPageChange","labelRowsPerPage","labelDisplayedRows","_ref2","from","to","open","onClose","maxWidth","dividers","required","multiline","rows","_ref3","control","gutterBottom","multiple","id","options","getOptionLabel","option","renderInput","params","dense","primary","edge","my","pl","pr","_ref4","paragraph"],"sources":["/app/src/components/Admin/InboxManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Tooltip,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Switch,\n  FormControlLabel,\n  Divider,\n  CircularProgress,\n  Alert,\n  useTheme,\n  InputAdornment,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  Autocomplete\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Search as SearchIcon,\n  Inbox as InboxIcon,\n  Business as DepartmentIcon,\n  Person as UserIcon,\n  Workflow as WorkflowIcon,\n  Settings as SystemIcon,\n  Email as EmailIcon,\n  Notifications as NotificationIcon,\n  People as PeopleIcon,\n  DeleteSweep as ClearIcon\n} from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { de } from 'date-fns/locale';\nimport api from '../../services/api';\n\n// Postkorb-Typen mit Icons und Farben\nconst inboxTypes = {\n  department: { \n    label: 'Abteilung', \n    icon: <DepartmentIcon />, \n    color: '#2196f3',\n    description: 'Postkorb für eine Abteilung oder einen Bereich'\n  },\n  user: { \n    label: 'Benutzer', \n    icon: <UserIcon />, \n    color: '#4caf50',\n    description: 'Persönlicher Postkorb für einen Benutzer'\n  },\n  workflow: { \n    label: 'Workflow', \n    icon: <WorkflowIcon />, \n    color: '#ff9800',\n    description: 'Postkorb für einen bestimmten Workflow oder Prozess'\n  },\n  system: { \n    label: 'System', \n    icon: <SystemIcon />, \n    color: '#9c27b0',\n    description: 'Systempostkorb für automatisierte Prozesse'\n  }\n};\n\n// Generieren von Dummy-Postkörben\nconst generateDummyInboxes = () => {\n  const inboxes = [\n    {\n      _id: 'inbox1',\n      name: 'Eingang',\n      description: 'Allgemeiner Posteingang für neue Dokumente',\n      type: 'department',\n      assignedUsers: [\n        { _id: 'user1', name: 'Max Mustermann' },\n        { _id: 'user2', name: 'Erika Musterfrau' }\n      ],\n      documentCount: 28,\n      notificationSettings: {\n        emailNotification: {\n          enabled: true,\n          recipients: ['team@example.com']\n        },\n        autoAssign: {\n          enabled: false,\n          assignmentStrategy: 'manual'\n        }\n      },\n      isActive: true,\n      createdAt: new Date('2023-01-01'),\n      createdBy: { _id: 'admin1', name: 'Administrator' }\n    },\n    {\n      _id: 'inbox2',\n      name: 'Rechnungswesen',\n      description: 'Dokumente für die Buchhaltung und Finanzen',\n      type: 'department',\n      assignedUsers: [\n        { _id: 'user3', name: 'Thomas Test' },\n        { _id: 'user4', name: 'Sabine Schmidt' }\n      ],\n      documentCount: 15,\n      notificationSettings: {\n        emailNotification: {\n          enabled: true,\n          recipients: ['finance@example.com']\n        },\n        autoAssign: {\n          enabled: true,\n          assignmentStrategy: 'round_robin'\n        }\n      },\n      isActive: true,\n      createdAt: new Date('2023-01-10'),\n      createdBy: { _id: 'admin1', name: 'Administrator' }\n    },\n    {\n      _id: 'inbox3',\n      name: 'Vertrieb',\n      description: 'Dokumente für den Vertrieb und Aufträge',\n      type: 'department',\n      assignedUsers: [\n        { _id: 'user5', name: 'Peter Peters' },\n        { _id: 'user6', name: 'Laura Lang' }\n      ],\n      documentCount: 22,\n      notificationSettings: {\n        emailNotification: {\n          enabled: true,\n          recipients: ['sales@example.com']\n        },\n        autoAssign: {\n          enabled: false,\n          assignmentStrategy: 'manual'\n        }\n      },\n      isActive: true,\n      createdAt: new Date('2023-01-15'),\n      createdBy: { _id: 'admin1', name: 'Administrator' }\n    }\n  ];\n  \n  // Weitere Postkörbe generieren\n  const departments = ['Einkauf', 'Personal', 'IT', 'Marketing', 'Kundenservice', 'Produktion'];\n  const types = ['department', 'workflow', 'user', 'system'];\n  \n  for (let i = 1; i <= 15; i++) {\n    const type = types[Math.floor(Math.random() * types.length)];\n    \n    const createdDate = new Date();\n    createdDate.setDate(createdDate.getDate() - Math.floor(Math.random() * 365));\n    \n    inboxes.push({\n      _id: `inbox${i + 3}`,\n      name: type === 'department' \n        ? departments[Math.floor(Math.random() * departments.length)]\n        : type === 'workflow'\n          ? `Workflow ${i}`\n          : type === 'user'\n            ? `Persönlicher Postkorb ${i}`\n            : `System ${i}`,\n      description: `Beschreibung für ${type === 'department' ? 'Abteilung' : type === 'workflow' ? 'Workflow' : type === 'user' ? 'Benutzer' : 'System'} ${i}`,\n      type,\n      assignedUsers: [\n        { _id: `user${i*2-1}`, name: `Benutzer ${i*2-1}` },\n        { _id: `user${i*2}`, name: `Benutzer ${i*2}` }\n      ].slice(0, Math.floor(Math.random() * 3) + 1), // 1-3 Benutzer\n      documentCount: Math.floor(Math.random() * 30),\n      notificationSettings: {\n        emailNotification: {\n          enabled: Math.random() > 0.3,\n          recipients: [`${type}${i}@example.com`]\n        },\n        autoAssign: {\n          enabled: Math.random() > 0.7,\n          assignmentStrategy: ['manual', 'round_robin', 'workload_balanced'][Math.floor(Math.random() * 3)]\n        }\n      },\n      isActive: Math.random() > 0.1, // 90% aktiv\n      createdAt: createdDate,\n      createdBy: { _id: 'admin1', name: 'Administrator' }\n    });\n  }\n  \n  return inboxes;\n};\n\n// Dummy-Benutzer für Zuweisungen\nconst generateDummyUsers = () => [\n  { _id: 'user1', name: 'Max Mustermann' },\n  { _id: 'user2', name: 'Erika Musterfrau' },\n  { _id: 'user3', name: 'Thomas Test' },\n  { _id: 'user4', name: 'Sabine Schmidt' },\n  { _id: 'user5', name: 'Peter Peters' },\n  { _id: 'user6', name: 'Laura Lang' },\n  { _id: 'user7', name: 'Michael Müller' },\n  { _id: 'user8', name: 'Sandra Schmitz' },\n  { _id: 'user9', name: 'Tobias Tester' },\n  { _id: 'user10', name: 'Nina Neumann' }\n];\n\nconst InboxManagement = () => {\n  const theme = useTheme();\n  \n  // State für Postkorbliste\n  const [inboxes, setInboxes] = useState([]);\n  const [filteredInboxes, setFilteredInboxes] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Pagination-State\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  \n  // Such- und Filter-State\n  const [searchTerm, setSearchTerm] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  \n  // Dialog-States\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [emptyDialogOpen, setEmptyDialogOpen] = useState(false);\n  \n  // Ausgewählter Postkorb für Dialoge\n  const [selectedInbox, setSelectedInbox] = useState(null);\n  \n  // Formular-Daten für neuen Postkorb\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    type: 'department',\n    assignedUsers: [],\n    notificationSettings: {\n      emailNotification: {\n        enabled: false,\n        recipients: []\n      },\n      autoAssign: {\n        enabled: false,\n        assignmentStrategy: 'manual'\n      }\n    },\n    isActive: true\n  });\n  \n  // E-Mail-Eingabefeld\n  const [emailInput, setEmailInput] = useState('');\n  \n  // Daten laden\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // In einer realen App würden die Daten von der API geladen werden\n        // const inboxResponse = await api.get('/api/inboxes');\n        // const userResponse = await api.get('/api/users');\n        \n        // Für Demo-Zwecke verwenden wir Dummy-Daten\n        setTimeout(() => {\n          const dummyInboxes = generateDummyInboxes();\n          const dummyUsers = generateDummyUsers();\n          \n          setInboxes(dummyInboxes);\n          setFilteredInboxes(dummyInboxes);\n          setUsers(dummyUsers);\n          setLoading(false);\n        }, 1000);\n      } catch (error) {\n        console.error('Fehler beim Laden der Daten:', error);\n        setError('Fehler beim Laden der Daten. Bitte versuchen Sie es später erneut.');\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, []);\n  \n  // Postkörbe filtern\n  useEffect(() => {\n    if (!inboxes.length) return;\n    \n    let filtered = [...inboxes];\n    \n    // Textsuche\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase();\n      filtered = filtered.filter(inbox => \n        inbox.name.toLowerCase().includes(searchLower) ||\n        inbox.description.toLowerCase().includes(searchLower) ||\n        inbox.assignedUsers.some(user => user.name.toLowerCase().includes(searchLower))\n      );\n    }\n    \n    // Typenfilter\n    if (typeFilter) {\n      filtered = filtered.filter(inbox => inbox.type === typeFilter);\n    }\n    \n    // Statusfilter\n    if (statusFilter === 'active') {\n      filtered = filtered.filter(inbox => inbox.isActive);\n    } else if (statusFilter === 'inactive') {\n      filtered = filtered.filter(inbox => !inbox.isActive);\n    }\n    \n    setFilteredInboxes(filtered);\n    setPage(0); // Zurück zur ersten Seite bei Filteränderung\n  }, [inboxes, searchTerm, typeFilter, statusFilter]);\n  \n  // Such-Handler\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n  \n  // Pagination-Handler\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  \n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  \n  // Formular-Handler\n  const handleInputChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    \n    if (name.startsWith('notificationSettings.')) {\n      const path = name.split('.');\n      setFormData({\n        ...formData,\n        notificationSettings: {\n          ...formData.notificationSettings,\n          [path[1]]: {\n            ...formData.notificationSettings[path[1]],\n            [path[2]]: type === 'checkbox' ? checked : value\n          }\n        }\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: type === 'checkbox' ? checked : value\n      });\n    }\n  };\n  \n  // E-Mail hinzufügen\n  const handleAddEmail = () => {\n    if (!emailInput || !emailInput.includes('@')) return;\n    \n    const newRecipients = [...formData.notificationSettings.emailNotification.recipients];\n    if (!newRecipients.includes(emailInput)) {\n      newRecipients.push(emailInput);\n      \n      setFormData({\n        ...formData,\n        notificationSettings: {\n          ...formData.notificationSettings,\n          emailNotification: {\n            ...formData.notificationSettings.emailNotification,\n            recipients: newRecipients\n          }\n        }\n      });\n    }\n    \n    setEmailInput('');\n  };\n  \n  // E-Mail entfernen\n  const handleRemoveEmail = (email) => {\n    const newRecipients = formData.notificationSettings.emailNotification.recipients.filter(\n      recipient => recipient !== email\n    );\n    \n    setFormData({\n      ...formData,\n      notificationSettings: {\n        ...formData.notificationSettings,\n        emailNotification: {\n          ...formData.notificationSettings.emailNotification,\n          recipients: newRecipients\n        }\n      }\n    });\n  };\n  \n  // Benutzer-Handler\n  const handleUserChange = (event, newValue) => {\n    setFormData({\n      ...formData,\n      assignedUsers: newValue\n    });\n  };\n  \n  // Dialog-Handler\n  const handleOpenCreateDialog = () => {\n    setFormData({\n      name: '',\n      description: '',\n      type: 'department',\n      assignedUsers: [],\n      notificationSettings: {\n        emailNotification: {\n          enabled: false,\n          recipients: []\n        },\n        autoAssign: {\n          enabled: false,\n          assignmentStrategy: 'manual'\n        }\n      },\n      isActive: true\n    });\n    setCreateDialogOpen(true);\n  };\n  \n  const handleCloseCreateDialog = () => {\n    setCreateDialogOpen(false);\n  };\n  \n  const handleOpenEditDialog = (inbox) => {\n    setSelectedInbox(inbox);\n    setFormData({\n      name: inbox.name,\n      description: inbox.description,\n      type: inbox.type,\n      assignedUsers: inbox.assignedUsers,\n      notificationSettings: {\n        emailNotification: {\n          enabled: inbox.notificationSettings.emailNotification.enabled,\n          recipients: [...inbox.notificationSettings.emailNotification.recipients]\n        },\n        autoAssign: {\n          enabled: inbox.notificationSettings.autoAssign.enabled,\n          assignmentStrategy: inbox.notificationSettings.autoAssign.assignmentStrategy\n        }\n      },\n      isActive: inbox.isActive\n    });\n    setEditDialogOpen(true);\n  };\n  \n  const handleCloseEditDialog = () => {\n    setEditDialogOpen(false);\n    setSelectedInbox(null);\n  };\n  \n  const handleOpenDeleteDialog = (inbox) => {\n    setSelectedInbox(inbox);\n    setDeleteDialogOpen(true);\n  };\n  \n  const handleCloseDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n    setSelectedInbox(null);\n  };\n  \n  const handleOpenEmptyDialog = (inbox) => {\n    setSelectedInbox(inbox);\n    setEmptyDialogOpen(true);\n  };\n  \n  const handleCloseEmptyDialog = () => {\n    setEmptyDialogOpen(false);\n    setSelectedInbox(null);\n  };\n  \n  // CRUD-Operationen\n  const handleCreateInbox = () => {\n    // In einer realen App würde hier ein API-Aufruf gemacht werden\n    // await api.post('/api/inboxes', formData);\n    \n    // Für Demo-Zwecke fügen wir den Postkorb lokal hinzu\n    const newInbox = {\n      _id: `inbox${Date.now()}`,\n      ...formData,\n      documentCount: 0,\n      createdAt: new Date(),\n      createdBy: { _id: 'admin1', name: 'Administrator' }\n    };\n    \n    setInboxes([...inboxes, newInbox]);\n    handleCloseCreateDialog();\n    \n    // Erfolgsmeldung\n    alert('Postkorb erfolgreich erstellt');\n  };\n  \n  const handleUpdateInbox = () => {\n    // In einer realen App würde hier ein API-Aufruf gemacht werden\n    // await api.put(`/api/inboxes/${selectedInbox._id}`, formData);\n    \n    // Für Demo-Zwecke aktualisieren wir den Postkorb lokal\n    const updatedInboxes = inboxes.map(inbox => {\n      if (inbox._id === selectedInbox._id) {\n        return {\n          ...inbox,\n          name: formData.name,\n          description: formData.description,\n          type: formData.type,\n          assignedUsers: formData.assignedUsers,\n          notificationSettings: formData.notificationSettings,\n          isActive: formData.isActive\n        };\n      }\n      return inbox;\n    });\n    \n    setInboxes(updatedInboxes);\n    handleCloseEditDialog();\n    \n    // Erfolgsmeldung\n    alert('Postkorb erfolgreich aktualisiert');\n  };\n  \n  const handleDeleteInbox = () => {\n    // In einer realen App würde hier ein API-Aufruf gemacht werden\n    // await api.delete(`/api/inboxes/${selectedInbox._id}`);\n    \n    // Für Demo-Zwecke entfernen wir den Postkorb lokal\n    const updatedInboxes = inboxes.filter(inbox => inbox._id !== selectedInbox._id);\n    \n    setInboxes(updatedInboxes);\n    handleCloseDeleteDialog();\n    \n    // Erfolgsmeldung\n    alert('Postkorb erfolgreich gelöscht');\n  };\n  \n  const handleEmptyInbox = () => {\n    // In einer realen App würde hier ein API-Aufruf gemacht werden\n    // await api.post(`/api/inboxes/${selectedInbox._id}/empty`);\n    \n    // Für Demo-Zwecke setzen wir die Dokumentenzahl auf 0\n    const updatedInboxes = inboxes.map(inbox => {\n      if (inbox._id === selectedInbox._id) {\n        return {\n          ...inbox,\n          documentCount: 0\n        };\n      }\n      return inbox;\n    });\n    \n    setInboxes(updatedInboxes);\n    handleCloseEmptyDialog();\n    \n    // Erfolgsmeldung\n    alert(`Postkorb \"${selectedInbox.name}\" wurde geleert`);\n  };\n  \n  const handleToggleInboxStatus = (inbox) => {\n    // In einer realen App würde hier ein API-Aufruf gemacht werden\n    // await api.put(`/api/inboxes/${inbox._id}/toggle-status`);\n    \n    // Für Demo-Zwecke aktualisieren wir den Status lokal\n    const updatedInboxes = inboxes.map(i => {\n      if (i._id === inbox._id) {\n        return {\n          ...i,\n          isActive: !i.isActive\n        };\n      }\n      return i;\n    });\n    \n    setInboxes(updatedInboxes);\n    \n    // Erfolgsmeldung\n    alert(`Postkorb \"${inbox.name}\" wurde ${inbox.isActive ? 'deaktiviert' : 'aktiviert'}`);\n  };\n  \n  // Hilfsfunktionen\n  const formatDate = (date) => {\n    if (!date) return '-';\n    try {\n      return format(new Date(date), 'dd.MM.yyyy', { locale: de });\n    } catch (error) {\n      return 'Ungültiges Datum';\n    }\n  };\n  \n  // Typ als Chip darstellen\n  const renderTypeChip = (type) => {\n    const typeInfo = inboxTypes[type] || { label: type, color: '#757575', icon: <InboxIcon /> };\n    \n    return (\n      <Chip\n        icon={typeInfo.icon}\n        label={typeInfo.label}\n        size=\"small\"\n        sx={{\n          backgroundColor: `${typeInfo.color}20`,\n          color: typeInfo.color,\n          '& .MuiChip-icon': {\n            color: typeInfo.color\n          }\n        }}\n      />\n    );\n  };\n  \n  // Status als Chip darstellen\n  const renderStatusChip = (active) => {\n    return (\n      <Chip\n        label={active ? 'Aktiv' : 'Inaktiv'}\n        size=\"small\"\n        color={active ? 'success' : 'default'}\n        variant={active ? 'filled' : 'outlined'}\n      />\n    );\n  };\n  \n  // Zugewiesene Benutzer anzeigen\n  const renderAssignedUsers = (assignedUsers) => {\n    if (!assignedUsers || assignedUsers.length === 0) {\n      return <Typography variant=\"body2\" color=\"text.secondary\">Keine</Typography>;\n    }\n    \n    return (\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n        {assignedUsers.map((user) => (\n          <Chip\n            key={user._id}\n            label={user.name}\n            size=\"small\"\n            icon={<UserIcon />}\n          />\n        ))}\n      </Box>\n    );\n  };\n  \n  // Benachrichtigungseinstellungen anzeigen\n  const renderNotificationSettings = (settings) => {\n    if (!settings) return null;\n    \n    return (\n      <Box>\n        {settings.emailNotification?.enabled && (\n          <Chip\n            icon={<EmailIcon />}\n            label=\"E-Mail-Benachrichtigung\"\n            size=\"small\"\n            color=\"primary\"\n            sx={{ mr: 0.5 }}\n          />\n        )}\n        {settings.autoAssign?.enabled && (\n          <Chip\n            icon={<PeopleIcon />}\n            label=\"Auto-Zuweisung\"\n            size=\"small\"\n            color=\"secondary\"\n          />\n        )}\n      </Box>\n    );\n  };\n  \n  // Paginierte Postkörbe\n  const paginatedInboxes = filteredInboxes\n    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  \n  // Leere Zeilen für Pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, filteredInboxes.length - page * rowsPerPage);\n  \n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h4\">Postkorb-Verwaltung</Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={handleOpenCreateDialog}\n        >\n          Neuer Postkorb\n        </Button>\n      </Box>\n      \n      {/* Such- und Filterleiste */}\n      <Paper sx={{ p: 2, mb: 3 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} md={4}>\n            <TextField\n              fullWidth\n              placeholder=\"Suchen...\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                )\n              }}\n              size=\"small\"\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel>Typ</InputLabel>\n              <Select\n                value={typeFilter}\n                onChange={(e) => setTypeFilter(e.target.value)}\n                label=\"Typ\"\n              >\n                <MenuItem value=\"\">Alle Typen</MenuItem>\n                {Object.entries(inboxTypes).map(([key, { label }]) => (\n                  <MenuItem key={key} value={key}>{label}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel>Status</InputLabel>\n              <Select\n                value={statusFilter}\n                onChange={(e) => setStatusFilter(e.target.value)}\n                label=\"Status\"\n              >\n                <MenuItem value=\"\">Alle Status</MenuItem>\n                <MenuItem value=\"active\">Aktiv</MenuItem>\n                <MenuItem value=\"inactive\">Inaktiv</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <Button \n              fullWidth\n              variant=\"outlined\"\n              onClick={() => {\n                setSearchTerm('');\n                setTypeFilter('');\n                setStatusFilter('');\n              }}\n            >\n              Filter zurücksetzen\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      \n      {/* Postkörbe-Tabelle */}\n      <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n            <CircularProgress />\n          </Box>\n        ) : error ? (\n          <Alert severity=\"error\" sx={{ m: 2 }}>{error}</Alert>\n        ) : (\n          <>\n            <TableContainer sx={{ maxHeight: 'calc(100vh - 300px)' }}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Beschreibung</TableCell>\n                    <TableCell>Typ</TableCell>\n                    <TableCell>Benutzer</TableCell>\n                    <TableCell>Dokumente</TableCell>\n                    <TableCell>Benachrichtigungen</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Erstellt am</TableCell>\n                    <TableCell align=\"right\">Aktionen</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {paginatedInboxes.map((inbox) => (\n                    <TableRow\n                      key={inbox._id}\n                      hover\n                      sx={{\n                        '&:hover': { backgroundColor: 'action.hover' }\n                      }}\n                    >\n                      <TableCell>{inbox.name}</TableCell>\n                      <TableCell>{inbox.description}</TableCell>\n                      <TableCell>{renderTypeChip(inbox.type)}</TableCell>\n                      <TableCell>{renderAssignedUsers(inbox.assignedUsers)}</TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">{inbox.documentCount}</Typography>\n                      </TableCell>\n                      <TableCell>{renderNotificationSettings(inbox.notificationSettings)}</TableCell>\n                      <TableCell>{renderStatusChip(inbox.isActive)}</TableCell>\n                      <TableCell>{formatDate(inbox.createdAt)}</TableCell>\n                      <TableCell align=\"right\">\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                          <Tooltip title=\"Bearbeiten\">\n                            <IconButton onClick={() => handleOpenEditDialog(inbox)} size=\"small\">\n                              <EditIcon />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Postkorb leeren\">\n                            <IconButton \n                              onClick={() => handleOpenEmptyDialog(inbox)} \n                              size=\"small\" \n                              disabled={inbox.documentCount === 0}\n                            >\n                              <ClearIcon />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title={inbox.isActive ? 'Deaktivieren' : 'Aktivieren'}>\n                            <IconButton \n                              onClick={() => handleToggleInboxStatus(inbox)}\n                              size=\"small\"\n                              color={inbox.isActive ? 'default' : 'primary'}\n                            >\n                              {inbox.isActive ? <DeleteIcon /> : <InboxIcon />}\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Löschen\">\n                            <IconButton \n                              onClick={() => handleOpenDeleteDialog(inbox)} \n                              size=\"small\" \n                              color=\"error\"\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                  \n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={9} />\n                    </TableRow>\n                  )}\n                  \n                  {filteredInboxes.length === 0 && (\n                    <TableRow>\n                      <TableCell colSpan={9} align=\"center\" sx={{ py: 3 }}>\n                        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                          <InboxIcon sx={{ fontSize: 50, color: 'text.secondary', mb: 1 }} />\n                          <Typography variant=\"h6\" color=\"text.secondary\">\n                            Keine Postkörbe gefunden\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            Versuchen Sie, Ihre Suchkriterien anzupassen\n                          </Typography>\n                          <Button \n                            variant=\"outlined\"\n                            onClick={() => {\n                              setSearchTerm('');\n                              setTypeFilter('');\n                              setStatusFilter('');\n                            }}\n                            sx={{ mt: 2 }}\n                          >\n                            Filter zurücksetzen\n                          </Button>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, 50]}\n              component=\"div\"\n              count={filteredInboxes.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              labelRowsPerPage=\"Zeilen pro Seite:\"\n              labelDisplayedRows={({ from, to, count }) => \n                `${from}-${to} von ${count !== -1 ? count : `mehr als ${to}`}`\n              }\n            />\n          </>\n        )}\n      </Paper>\n      \n      {/* Dialog: Postkorb erstellen */}\n      <Dialog\n        open={createDialogOpen}\n        onClose={handleCloseCreateDialog}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>Neuen Postkorb erstellen</DialogTitle>\n        <DialogContent dividers>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                required\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                fullWidth\n                label=\"Beschreibung\"\n                name=\"description\"\n                value={formData.description}\n                onChange={handleInputChange}\n                multiline\n                rows={3}\n                sx={{ mb: 2 }}\n              />\n              <FormControl fullWidth sx={{ mb: 2 }}>\n                <InputLabel>Typ</InputLabel>\n                <Select\n                  name=\"type\"\n                  value={formData.type}\n                  onChange={handleInputChange}\n                  label=\"Typ\"\n                >\n                  {Object.entries(inboxTypes).map(([key, { label }]) => (\n                    <MenuItem key={key} value={key}>{label}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControlLabel\n                control={\n                  <Switch\n                    name=\"isActive\"\n                    checked={formData.isActive}\n                    onChange={handleInputChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Postkorb ist aktiv\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Benutzer zuweisen\n              </Typography>\n              <Autocomplete\n                multiple\n                id=\"assigned-users\"\n                options={users}\n                value={formData.assignedUsers}\n                onChange={handleUserChange}\n                getOptionLabel={(option) => option.name}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    label=\"Zugewiesene Benutzer\"\n                    placeholder=\"Benutzer hinzufügen\"\n                    fullWidth\n                  />\n                )}\n                sx={{ mb: 3 }}\n              />\n              \n              <Typography variant=\"subtitle1\" gutterBottom>\n                Benachrichtigungseinstellungen\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Switch\n                    name=\"notificationSettings.emailNotification.enabled\"\n                    checked={formData.notificationSettings.emailNotification.enabled}\n                    onChange={handleInputChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"E-Mail-Benachrichtigung aktivieren\"\n              />\n              \n              {formData.notificationSettings.emailNotification.enabled && (\n                <Box sx={{ mt: 1, mb: 2 }}>\n                  <Grid container spacing={1}>\n                    <Grid item xs={9}>\n                      <TextField\n                        fullWidth\n                        label=\"E-Mail-Adresse\"\n                        value={emailInput}\n                        onChange={(e) => setEmailInput(e.target.value)}\n                        size=\"small\"\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Button\n                        variant=\"outlined\"\n                        onClick={handleAddEmail}\n                        fullWidth\n                        sx={{ height: '100%' }}\n                      >\n                        Hinzufügen\n                      </Button>\n                    </Grid>\n                  </Grid>\n                  \n                  <List dense sx={{ mt: 1 }}>\n                    {formData.notificationSettings.emailNotification.recipients.map((email) => (\n                      <ListItem key={email}>\n                        <ListItemIcon>\n                          <EmailIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary={email} />\n                        <ListItemSecondaryAction>\n                          <IconButton edge=\"end\" onClick={() => handleRemoveEmail(email)}>\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                  </List>\n                </Box>\n              )}\n              \n              <Divider sx={{ my: 2 }} />\n              \n              <FormControlLabel\n                control={\n                  <Switch\n                    name=\"notificationSettings.autoAssign.enabled\"\n                    checked={formData.notificationSettings.autoAssign.enabled}\n                    onChange={handleInputChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Automatische Zuweisung aktivieren\"\n              />\n              \n              {formData.notificationSettings.autoAssign.enabled && (\n                <FormControl fullWidth sx={{ mt: 1 }}>\n                  <InputLabel>Zuweisungsstrategie</InputLabel>\n                  <Select\n                    name=\"notificationSettings.autoAssign.assignmentStrategy\"\n                    value={formData.notificationSettings.autoAssign.assignmentStrategy}\n                    onChange={handleInputChange}\n                    label=\"Zuweisungsstrategie\"\n                  >\n                    <MenuItem value=\"manual\">Manuell</MenuItem>\n                    <MenuItem value=\"round_robin\">Rundlauf (Round Robin)</MenuItem>\n                    <MenuItem value=\"workload_balanced\">Lastenausgleich</MenuItem>\n                  </Select>\n                </FormControl>\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <Divider sx={{ mt: 2, mb: 2 }} />\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Postkorb-Typ Information\n              </Typography>\n              <Box sx={{ pl: 2, pr: 2 }}>\n                <Typography variant=\"body2\" gutterBottom>\n                  <strong>{inboxTypes[formData.type]?.label}:</strong> {inboxTypes[formData.type]?.description}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseCreateDialog}>Abbrechen</Button>\n          <Button \n            onClick={handleCreateInbox} \n            variant=\"contained\"\n            disabled={!formData.name}\n          >\n            Postkorb erstellen\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Dialog: Postkorb bearbeiten */}\n      <Dialog\n        open={editDialogOpen}\n        onClose={handleCloseEditDialog}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>Postkorb bearbeiten</DialogTitle>\n        <DialogContent dividers>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                required\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                fullWidth\n                label=\"Beschreibung\"\n                name=\"description\"\n                value={formData.description}\n                onChange={handleInputChange}\n                multiline\n                rows={3}\n                sx={{ mb: 2 }}\n              />\n              <FormControl fullWidth sx={{ mb: 2 }}>\n                <InputLabel>Typ</InputLabel>\n                <Select\n                  name=\"type\"\n                  value={formData.type}\n                  onChange={handleInputChange}\n                  label=\"Typ\"\n                >\n                  {Object.entries(inboxTypes).map(([key, { label }]) => (\n                    <MenuItem key={key} value={key}>{label}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControlLabel\n                control={\n                  <Switch\n                    name=\"isActive\"\n                    checked={formData.isActive}\n                    onChange={handleInputChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Postkorb ist aktiv\"\n              />\n              \n              {selectedInbox && (\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <strong>Erstellt am:</strong> {formatDate(selectedInbox.createdAt)}\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    <strong>Erstellt von:</strong> {selectedInbox.createdBy.name}\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    <strong>Dokumente:</strong> {selectedInbox.documentCount}\n                  </Typography>\n                </Box>\n              )}\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Benutzer zuweisen\n              </Typography>\n              <Autocomplete\n                multiple\n                id=\"assigned-users-edit\"\n                options={users}\n                value={formData.assignedUsers}\n                onChange={handleUserChange}\n                getOptionLabel={(option) => option.name}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    label=\"Zugewiesene Benutzer\"\n                    placeholder=\"Benutzer hinzufügen\"\n                    fullWidth\n                  />\n                )}\n                sx={{ mb: 3 }}\n              />\n              \n              <Typography variant=\"subtitle1\" gutterBottom>\n                Benachrichtigungseinstellungen\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Switch\n                    name=\"notificationSettings.emailNotification.enabled\"\n                    checked={formData.notificationSettings.emailNotification.enabled}\n                    onChange={handleInputChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"E-Mail-Benachrichtigung aktivieren\"\n              />\n              \n              {formData.notificationSettings.emailNotification.enabled && (\n                <Box sx={{ mt: 1, mb: 2 }}>\n                  <Grid container spacing={1}>\n                    <Grid item xs={9}>\n                      <TextField\n                        fullWidth\n                        label=\"E-Mail-Adresse\"\n                        value={emailInput}\n                        onChange={(e) => setEmailInput(e.target.value)}\n                        size=\"small\"\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Button\n                        variant=\"outlined\"\n                        onClick={handleAddEmail}\n                        fullWidth\n                        sx={{ height: '100%' }}\n                      >\n                        Hinzufügen\n                      </Button>\n                    </Grid>\n                  </Grid>\n                  \n                  <List dense sx={{ mt: 1 }}>\n                    {formData.notificationSettings.emailNotification.recipients.map((email) => (\n                      <ListItem key={email}>\n                        <ListItemIcon>\n                          <EmailIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary={email} />\n                        <ListItemSecondaryAction>\n                          <IconButton edge=\"end\" onClick={() => handleRemoveEmail(email)}>\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                  </List>\n                </Box>\n              )}\n              \n              <Divider sx={{ my: 2 }} />\n              \n              <FormControlLabel\n                control={\n                  <Switch\n                    name=\"notificationSettings.autoAssign.enabled\"\n                    checked={formData.notificationSettings.autoAssign.enabled}\n                    onChange={handleInputChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Automatische Zuweisung aktivieren\"\n              />\n              \n              {formData.notificationSettings.autoAssign.enabled && (\n                <FormControl fullWidth sx={{ mt: 1 }}>\n                  <InputLabel>Zuweisungsstrategie</InputLabel>\n                  <Select\n                    name=\"notificationSettings.autoAssign.assignmentStrategy\"\n                    value={formData.notificationSettings.autoAssign.assignmentStrategy}\n                    onChange={handleInputChange}\n                    label=\"Zuweisungsstrategie\"\n                  >\n                    <MenuItem value=\"manual\">Manuell</MenuItem>\n                    <MenuItem value=\"round_robin\">Rundlauf (Round Robin)</MenuItem>\n                    <MenuItem value=\"workload_balanced\">Lastenausgleich</MenuItem>\n                  </Select>\n                </FormControl>\n              )}\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseEditDialog}>Abbrechen</Button>\n          <Button \n            onClick={handleUpdateInbox} \n            variant=\"contained\"\n            disabled={!formData.name}\n          >\n            Speichern\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Dialog: Postkorb löschen */}\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={handleCloseDeleteDialog}\n      >\n        <DialogTitle>Postkorb löschen</DialogTitle>\n        <DialogContent>\n          <Typography paragraph>\n            Möchten Sie den Postkorb \"{selectedInbox?.name}\" wirklich löschen?\n            Dieser Vorgang kann nicht rückgängig gemacht werden.\n          </Typography>\n          {selectedInbox && selectedInbox.documentCount > 0 && (\n            <Alert severity=\"warning\" sx={{ mt: 2 }}>\n              Dieser Postkorb enthält {selectedInbox.documentCount} Dokumente, die beim Löschen\n              des Postkorbs ebenfalls entfernt werden.\n            </Alert>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDeleteDialog}>Abbrechen</Button>\n          <Button onClick={handleDeleteInbox} color=\"error\">\n            Löschen\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Dialog: Postkorb leeren */}\n      <Dialog\n        open={emptyDialogOpen}\n        onClose={handleCloseEmptyDialog}\n      >\n        <DialogTitle>Postkorb leeren</DialogTitle>\n        <DialogContent>\n          <Typography paragraph>\n            Möchten Sie alle Dokumente aus dem Postkorb \"{selectedInbox?.name}\" entfernen?\n            Dieser Vorgang kann nicht rückgängig gemacht werden.\n          </Typography>\n          {selectedInbox && selectedInbox.documentCount > 0 && (\n            <Alert severity=\"warning\" sx={{ mt: 2 }}>\n              Dieser Postkorb enthält {selectedInbox.documentCount} Dokumente, die entfernt werden.\n              Die Dokumente selbst werden nicht gelöscht, sondern nur aus dem Postkorb entfernt.\n            </Alert>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseEmptyDialog}>Abbrechen</Button>\n          <Button onClick={handleEmptyInbox} color=\"warning\">\n            Postkorb leeren\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default InboxManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}