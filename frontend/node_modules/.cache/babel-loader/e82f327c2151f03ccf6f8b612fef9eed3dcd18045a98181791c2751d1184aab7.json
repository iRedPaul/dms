{"ast":null,"code":"import React,{useContext}from'react';import{Navigate,useLocation}from'react-router-dom';import{AuthContext}from'../../context/AuthContext';import{Box,CircularProgress,Typography}from'@mui/material';/**\n * ProtectedRoute - Schützt Routen vor unautorisierten Zugriffen\n * \n * @param {object} props\n * @param {React.ReactNode} props.children - Die geschützten Komponenten\n * @param {string|string[]} [props.requiredRole] - Optional: Erforderliche Benutzerrolle(n)\n * @returns {React.ReactNode}\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,requiredRole}=_ref;const{isAuthenticated,user,loading,hasRole}=useContext(AuthContext);const location=useLocation();// Ladebildschirm anzeigen, wenn der Auth-Status noch geprüft wird\nif(loading){return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',height:'100vh'},children:[/*#__PURE__*/_jsx(CircularProgress,{size:60}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mt:2},children:\"Authentifizierung wird \\xFCberpr\\xFCft...\"})]});}// Zur Login-Seite umleiten, wenn nicht authentifiziert\nif(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location},replace:true});}// Rollenprüfung, falls erforderlich\nif(requiredRole&&user){const hasRequiredRole=hasRole(requiredRole);if(!hasRequiredRole){// Bei fehlender Berechtigung zur Startseite umleiten\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}}// Geschützte Komponenten rendern, wenn alle Prüfungen bestanden wurden\nreturn children;};export default ProtectedRoute;","map":{"version":3,"names":["React","useContext","Navigate","useLocation","AuthContext","Box","CircularProgress","Typography","jsx","_jsx","jsxs","_jsxs","ProtectedRoute","_ref","children","requiredRole","isAuthenticated","user","loading","hasRole","location","sx","display","flexDirection","alignItems","justifyContent","height","size","variant","mt","to","state","from","replace","hasRequiredRole"],"sources":["/app/src/components/Auth/ProtectedRoute.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport { Box, CircularProgress, Typography } from '@mui/material';\n\n/**\n * ProtectedRoute - Schützt Routen vor unautorisierten Zugriffen\n * \n * @param {object} props\n * @param {React.ReactNode} props.children - Die geschützten Komponenten\n * @param {string|string[]} [props.requiredRole] - Optional: Erforderliche Benutzerrolle(n)\n * @returns {React.ReactNode}\n */\nconst ProtectedRoute = ({ children, requiredRole }) => {\n  const { isAuthenticated, user, loading, hasRole } = useContext(AuthContext);\n  const location = useLocation();\n\n  // Ladebildschirm anzeigen, wenn der Auth-Status noch geprüft wird\n  if (loading) {\n    return (\n      <Box \n        sx={{ \n          display: 'flex', \n          flexDirection: 'column',\n          alignItems: 'center', \n          justifyContent: 'center', \n          height: '100vh' \n        }}\n      >\n        <CircularProgress size={60} />\n        <Typography variant=\"h6\" sx={{ mt: 2 }}>\n          Authentifizierung wird überprüft...\n        </Typography>\n      </Box>\n    );\n  }\n\n  // Zur Login-Seite umleiten, wenn nicht authentifiziert\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Rollenprüfung, falls erforderlich\n  if (requiredRole && user) {\n    const hasRequiredRole = hasRole(requiredRole);\n    \n    if (!hasRequiredRole) {\n      // Bei fehlender Berechtigung zur Startseite umleiten\n      return <Navigate to=\"/\" replace />;\n    }\n  }\n\n  // Geschützte Komponenten rendern, wenn alle Prüfungen bestanden wurden\n  return children;\n};\n\nexport default ProtectedRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,WAAW,KAAQ,2BAA2B,CACvD,OAASC,GAAG,CAAEC,gBAAgB,CAAEC,UAAU,KAAQ,eAAe,CAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAPA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQA,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAChD,KAAM,CAAEG,eAAe,CAAEC,IAAI,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAGlB,UAAU,CAACG,WAAW,CAAC,CAC3E,KAAM,CAAAgB,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAE9B;AACA,GAAIe,OAAO,CAAE,CACX,mBACEP,KAAA,CAACN,GAAG,EACFgB,EAAE,CAAE,CACFC,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBC,MAAM,CAAE,OACV,CAAE,CAAAZ,QAAA,eAEFL,IAAA,CAACH,gBAAgB,EAACqB,IAAI,CAAE,EAAG,CAAE,CAAC,cAC9BlB,IAAA,CAACF,UAAU,EAACqB,OAAO,CAAC,IAAI,CAACP,EAAE,CAAE,CAAEQ,EAAE,CAAE,CAAE,CAAE,CAAAf,QAAA,CAAC,2CAExC,CAAY,CAAC,EACV,CAAC,CAEV,CAEA;AACA,GAAI,CAACE,eAAe,CAAE,CACpB,mBAAOP,IAAA,CAACP,QAAQ,EAAC4B,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEZ,QAAS,CAAE,CAACa,OAAO,MAAE,CAAC,CACpE,CAEA;AACA,GAAIlB,YAAY,EAAIE,IAAI,CAAE,CACxB,KAAM,CAAAiB,eAAe,CAAGf,OAAO,CAACJ,YAAY,CAAC,CAE7C,GAAI,CAACmB,eAAe,CAAE,CACpB;AACA,mBAAOzB,IAAA,CAACP,QAAQ,EAAC4B,EAAE,CAAC,GAAG,CAACG,OAAO,MAAE,CAAC,CACpC,CACF,CAEA;AACA,MAAO,CAAAnB,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}