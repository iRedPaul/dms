{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Paper,Typography,Button,TextField,IconButton,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TablePagination,Tooltip,Chip,Dialog,DialogActions,DialogContent,DialogTitle,FormControl,InputLabel,Select,MenuItem,Grid,Switch,FormControlLabel,Divider,CircularProgress,Alert,useTheme,InputAdornment}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,Lock as LockIcon,LockOpen as LockOpenIcon,Search as SearchIcon,AdminPanelSettings as AdminIcon,Settings as SettingsIcon,ThumbUp as ApproverIcon,Person as UserIcon,Visibility as ReadOnlyIcon,MoreVert as MoreIcon,FilterList as FilterIcon}from'@mui/icons-material';import{format}from'date-fns';import{de}from'date-fns/locale';import api from'../../services/api';// Rollen mit Icons und Farben\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const userRoles={admin:{label:'Administrator',icon:/*#__PURE__*/_jsx(AdminIcon,{}),color:'#9c27b0',description:'Vollzugriff auf alle Funktionen des Systems'},'workflow-designer':{label:'Workflow-Designer',icon:/*#__PURE__*/_jsx(SettingsIcon,{}),color:'#2196f3',description:'Kann Workflows erstellen und bearbeiten'},approver:{label:'Genehmiger',icon:/*#__PURE__*/_jsx(ApproverIcon,{}),color:'#ff9800',description:'Kann Dokumente in Workflows genehmigen'},user:{label:'Benutzer',icon:/*#__PURE__*/_jsx(UserIcon,{}),color:'#4caf50',description:'Kann Dokumente hochladen und zugewiesene Aufgaben bearbeiten'},readonly:{label:'Nur Lesen',icon:/*#__PURE__*/_jsx(ReadOnlyIcon,{}),color:'#757575',description:'Kann nur Dokumente einsehen, zu denen Zugriff gewährt wurde'}};// Generieren von Dummy-Benutzern\nconst generateDummyUsers=()=>{const users=[{_id:'admin1',username:'admin',email:'admin@example.com',name:'Administrator',role:'admin',department:'IT',active:true,createdAt:new Date('2023-01-01'),lastLogin:new Date()},{_id:'designer1',username:'workflowdesigner',email:'designer@example.com',name:'Max Workflow',role:'workflow-designer',department:'Prozessmanagement',active:true,createdAt:new Date('2023-01-15'),lastLogin:new Date('2023-06-10')}];// Weitere Benutzer generieren\nconst departments=['Buchhaltung','Vertrieb','Personal','Einkauf','Marketing','Kundenservice'];const roles=['approver','user','readonly'];for(let i=1;i<=30;i++){const role=roles[Math.floor(Math.random()*roles.length)];const department=departments[Math.floor(Math.random()*departments.length)];const createdDate=new Date();createdDate.setDate(createdDate.getDate()-Math.floor(Math.random()*365));const lastLoginDate=new Date();lastLoginDate.setDate(lastLoginDate.getDate()-Math.floor(Math.random()*30));users.push({_id:`user${i}`,username:`user${i}`,email:`user${i}@example.com`,name:`Benutzer ${i}`,role,department,active:Math.random()>0.1,// 10% inaktive Benutzer\ncreatedAt:createdDate,lastLogin:lastLoginDate});}return users;};const UserManagement=()=>{var _userRoles$formData$r,_userRoles$formData$r2,_userRoles$formData$r3,_userRoles$formData$r4;const theme=useTheme();// State für Benutzerliste\nconst[users,setUsers]=useState([]);const[filteredUsers,setFilteredUsers]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Pagination-State\nconst[page,setPage]=useState(0);const[rowsPerPage,setRowsPerPage]=useState(10);// Such- und Filter-State\nconst[searchTerm,setSearchTerm]=useState('');const[roleFilter,setRoleFilter]=useState('');const[statusFilter,setStatusFilter]=useState('');// Dialog-States\nconst[createDialogOpen,setCreateDialogOpen]=useState(false);const[editDialogOpen,setEditDialogOpen]=useState(false);const[deleteDialogOpen,setDeleteDialogOpen]=useState(false);const[resetPasswordDialogOpen,setResetPasswordDialogOpen]=useState(false);// Ausgewählter Benutzer für Dialoge\nconst[selectedUser,setSelectedUser]=useState(null);// Formular-Daten für neuen Benutzer\nconst[formData,setFormData]=useState({username:'',email:'',name:'',password:'',confirmPassword:'',role:'user',department:'',active:true});// Benutzer laden\nuseEffect(()=>{const fetchUsers=async()=>{try{// In einer realen App würden die Benutzer von der API geladen werden\n// const response = await api.get('/api/users');\n// Für Demo-Zwecke verwenden wir Dummy-Daten\nsetTimeout(()=>{const dummyUsers=generateDummyUsers();setUsers(dummyUsers);setFilteredUsers(dummyUsers);setLoading(false);},1000);}catch(error){console.error('Fehler beim Laden der Benutzer:',error);setError('Fehler beim Laden der Benutzer. Bitte versuchen Sie es später erneut.');setLoading(false);}};fetchUsers();},[]);// Benutzer filtern\nuseEffect(()=>{if(!users.length)return;let filtered=[...users];// Textsuche\nif(searchTerm){const searchLower=searchTerm.toLowerCase();filtered=filtered.filter(user=>user.username.toLowerCase().includes(searchLower)||user.name.toLowerCase().includes(searchLower)||user.email.toLowerCase().includes(searchLower)||user.department.toLowerCase().includes(searchLower));}// Rollenfilter\nif(roleFilter){filtered=filtered.filter(user=>user.role===roleFilter);}// Statusfilter\nif(statusFilter==='active'){filtered=filtered.filter(user=>user.active);}else if(statusFilter==='inactive'){filtered=filtered.filter(user=>!user.active);}setFilteredUsers(filtered);setPage(0);// Zurück zur ersten Seite bei Filteränderung\n},[users,searchTerm,roleFilter,statusFilter]);// Such-Handler\nconst handleSearchChange=event=>{setSearchTerm(event.target.value);};// Pagination-Handler\nconst handleChangePage=(event,newPage)=>{setPage(newPage);};const handleChangeRowsPerPage=event=>{setRowsPerPage(parseInt(event.target.value,10));setPage(0);};// Formular-Handler\nconst handleInputChange=event=>{const{name,value,type,checked}=event.target;setFormData({...formData,[name]:type==='checkbox'?checked:value});};// Dialog-Handler\nconst handleOpenCreateDialog=()=>{setFormData({username:'',email:'',name:'',password:'',confirmPassword:'',role:'user',department:'',active:true});setCreateDialogOpen(true);};const handleCloseCreateDialog=()=>{setCreateDialogOpen(false);};const handleOpenEditDialog=user=>{setSelectedUser(user);setFormData({username:user.username,email:user.email,name:user.name,role:user.role,department:user.department,active:user.active,// Passwort nicht setzen bei Bearbeitung\npassword:'',confirmPassword:''});setEditDialogOpen(true);};const handleCloseEditDialog=()=>{setEditDialogOpen(false);setSelectedUser(null);};const handleOpenDeleteDialog=user=>{setSelectedUser(user);setDeleteDialogOpen(true);};const handleCloseDeleteDialog=()=>{setDeleteDialogOpen(false);setSelectedUser(null);};const handleOpenResetPasswordDialog=user=>{setSelectedUser(user);setFormData({...formData,password:'',confirmPassword:''});setResetPasswordDialogOpen(true);};const handleCloseResetPasswordDialog=()=>{setResetPasswordDialogOpen(false);setSelectedUser(null);};// CRUD-Operationen\nconst handleCreateUser=()=>{// Validierung\nif(formData.password!==formData.confirmPassword){alert('Passwörter stimmen nicht überein');return;}// In einer realen App würde hier ein API-Aufruf gemacht werden\n// await api.post('/api/users', formData);\n// Für Demo-Zwecke fügen wir den Benutzer lokal hinzu\nconst newUser={_id:`user${Date.now()}`,username:formData.username,email:formData.email,name:formData.name,role:formData.role,department:formData.department,active:formData.active,createdAt:new Date(),lastLogin:null};setUsers([...users,newUser]);handleCloseCreateDialog();// Erfolgsmeldung\nalert('Benutzer erfolgreich erstellt');};const handleUpdateUser=()=>{// In einer realen App würde hier ein API-Aufruf gemacht werden\n// await api.put(`/api/users/${selectedUser._id}`, formData);\n// Für Demo-Zwecke aktualisieren wir den Benutzer lokal\nconst updatedUsers=users.map(user=>{if(user._id===selectedUser._id){return{...user,username:formData.username,email:formData.email,name:formData.name,role:formData.role,department:formData.department,active:formData.active};}return user;});setUsers(updatedUsers);handleCloseEditDialog();// Erfolgsmeldung\nalert('Benutzer erfolgreich aktualisiert');};const handleDeleteUser=()=>{// In einer realen App würde hier ein API-Aufruf gemacht werden\n// await api.delete(`/api/users/${selectedUser._id}`);\n// Für Demo-Zwecke entfernen wir den Benutzer lokal\nconst updatedUsers=users.filter(user=>user._id!==selectedUser._id);setUsers(updatedUsers);handleCloseDeleteDialog();// Erfolgsmeldung\nalert('Benutzer erfolgreich gelöscht');};const handleResetPassword=()=>{// Validierung\nif(formData.password!==formData.confirmPassword){alert('Passwörter stimmen nicht überein');return;}// In einer realen App würde hier ein API-Aufruf gemacht werden\n// await api.put(`/api/users/${selectedUser._id}/reset-password`, { password: formData.password });\n// Für Demo-Zwecke geben wir nur eine Meldung aus\nalert(`Passwort für Benutzer ${selectedUser.username} wurde zurückgesetzt`);handleCloseResetPasswordDialog();};const handleToggleUserStatus=user=>{// In einer realen App würde hier ein API-Aufruf gemacht werden\n// await api.put(`/api/users/${user._id}/toggle-status`);\n// Für Demo-Zwecke aktualisieren wir den Status lokal\nconst updatedUsers=users.map(u=>{if(u._id===user._id){return{...u,active:!u.active};}return u;});setUsers(updatedUsers);// Erfolgsmeldung\nalert(`Benutzer ${user.username} wurde ${user.active?'deaktiviert':'aktiviert'}`);};// Hilfsfunktionen\nconst formatDate=date=>{if(!date)return'-';try{return format(new Date(date),'dd.MM.yyyy',{locale:de});}catch(error){return'Ungültiges Datum';}};// Rolle als Chip darstellen\nconst renderRoleChip=role=>{const roleInfo=userRoles[role]||{label:role,color:'#757575',icon:/*#__PURE__*/_jsx(UserIcon,{})};return/*#__PURE__*/_jsx(Chip,{icon:roleInfo.icon,label:roleInfo.label,size:\"small\",sx:{backgroundColor:`${roleInfo.color}20`,color:roleInfo.color,'& .MuiChip-icon':{color:roleInfo.color}}});};// Status als Chip darstellen\nconst renderStatusChip=active=>{return/*#__PURE__*/_jsx(Chip,{icon:active?/*#__PURE__*/_jsx(LockOpenIcon,{}):/*#__PURE__*/_jsx(LockIcon,{}),label:active?'Aktiv':'Inaktiv',size:\"small\",color:active?'success':'default',variant:active?'filled':'outlined'});};// Paginierte Benutzer\nconst paginatedUsers=filteredUsers.slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage);// Leere Zeilen für Pagination\nconst emptyRows=rowsPerPage-Math.min(rowsPerPage,filteredUsers.length-page*rowsPerPage);return/*#__PURE__*/_jsxs(Box,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:3,display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:\"Benutzerverwaltung\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:handleOpenCreateDialog,children:\"Neuer Benutzer\"})]}),/*#__PURE__*/_jsx(Paper,{sx:{p:2,mb:3},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,placeholder:\"Suchen...\",value:searchTerm,onChange:handleSearchChange,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(SearchIcon,{})})},size:\"small\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Rolle\"}),/*#__PURE__*/_jsxs(Select,{value:roleFilter,onChange:e=>setRoleFilter(e.target.value),label:\"Rolle\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"Alle Rollen\"}),Object.entries(userRoles).map(_ref=>{let[key,{label}]=_ref;return/*#__PURE__*/_jsx(MenuItem,{value:key,children:label},key);})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{value:statusFilter,onChange:e=>setStatusFilter(e.target.value),label:\"Status\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"Alle Status\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"active\",children:\"Aktiv\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"inactive\",children:\"Inaktiv\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:2,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"outlined\",onClick:()=>{setSearchTerm('');setRoleFilter('');setStatusFilter('');},children:\"Filter zur\\xFCcksetzen\"})})]})}),/*#__PURE__*/_jsx(Paper,{sx:{width:'100%',overflow:'hidden'},children:loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:4},children:/*#__PURE__*/_jsx(CircularProgress,{})}):error?/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{m:2},children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TableContainer,{sx:{maxHeight:'calc(100vh - 300px)'},children:/*#__PURE__*/_jsxs(Table,{stickyHeader:true,children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Benutzername\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"E-Mail\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Abteilung\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Rolle\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Erstellt am\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Letzter Login\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Aktionen\"})]})}),/*#__PURE__*/_jsxs(TableBody,{children:[paginatedUsers.map(user=>/*#__PURE__*/_jsxs(TableRow,{hover:true,sx:{'&:hover':{backgroundColor:'action.hover'}},children:[/*#__PURE__*/_jsx(TableCell,{children:user.username}),/*#__PURE__*/_jsx(TableCell,{children:user.name}),/*#__PURE__*/_jsx(TableCell,{children:user.email}),/*#__PURE__*/_jsx(TableCell,{children:user.department}),/*#__PURE__*/_jsx(TableCell,{children:renderRoleChip(user.role)}),/*#__PURE__*/_jsx(TableCell,{children:renderStatusChip(user.active)}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(user.createdAt)}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(user.lastLogin)}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'flex-end'},children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Bearbeiten\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenEditDialog(user),size:\"small\",children:/*#__PURE__*/_jsx(EditIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Passwort zur\\xFCcksetzen\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenResetPasswordDialog(user),size:\"small\",children:/*#__PURE__*/_jsx(LockOpenIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:user.active?'Deaktivieren':'Aktivieren',children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleToggleUserStatus(user),size:\"small\",color:user.active?'default':'primary',children:user.active?/*#__PURE__*/_jsx(LockIcon,{}):/*#__PURE__*/_jsx(LockOpenIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"L\\xF6schen\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenDeleteDialog(user),size:\"small\",color:\"error\",children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]})})]},user._id)),emptyRows>0&&/*#__PURE__*/_jsx(TableRow,{style:{height:53*emptyRows},children:/*#__PURE__*/_jsx(TableCell,{colSpan:9})}),filteredUsers.length===0&&/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:9,align:\"center\",sx:{py:3},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsx(UserIcon,{sx:{fontSize:50,color:'text.secondary',mb:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",children:\"Keine Benutzer gefunden\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Versuchen Sie, Ihre Suchkriterien anzupassen\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>{setSearchTerm('');setRoleFilter('');setStatusFilter('');},sx:{mt:2},children:\"Filter zur\\xFCcksetzen\"})]})})})]})]})}),/*#__PURE__*/_jsx(TablePagination,{rowsPerPageOptions:[5,10,25,50],component:\"div\",count:filteredUsers.length,rowsPerPage:rowsPerPage,page:page,onPageChange:handleChangePage,onRowsPerPageChange:handleChangeRowsPerPage,labelRowsPerPage:\"Zeilen pro Seite:\",labelDisplayedRows:_ref2=>{let{from,to,count}=_ref2;return`${from}-${to} von ${count!==-1?count:`mehr als ${to}`}`;}})]})}),/*#__PURE__*/_jsxs(Dialog,{open:createDialogOpen,onClose:handleCloseCreateDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Neuen Benutzer erstellen\"}),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Benutzername\",name:\"username\",value:formData.username,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Name\",name:\"name\",value:formData.name,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"E-Mail\",name:\"email\",type:\"email\",value:formData.email,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Abteilung\",name:\"department\",value:formData.department,onChange:handleInputChange,sx:{mb:2}})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Rolle\"}),/*#__PURE__*/_jsx(Select,{name:\"role\",value:formData.role,onChange:handleInputChange,label:\"Rolle\",children:Object.entries(userRoles).map(_ref3=>{let[key,{label}]=_ref3;return/*#__PURE__*/_jsx(MenuItem,{value:key,children:label},key);})})]}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Passwort\",name:\"password\",type:\"password\",value:formData.password,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Passwort best\\xE4tigen\",name:\"confirmPassword\",type:\"password\",value:formData.confirmPassword,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"active\",checked:formData.active,onChange:handleInputChange,color:\"primary\"}),label:\"Benutzer ist aktiv\"})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Divider,{sx:{mt:2,mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Rolleninformationen\"}),/*#__PURE__*/_jsx(Box,{sx:{pl:2,pr:2},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",gutterBottom:true,children:[/*#__PURE__*/_jsxs(\"strong\",{children:[(_userRoles$formData$r=userRoles[formData.role])===null||_userRoles$formData$r===void 0?void 0:_userRoles$formData$r.label,\":\"]}),\" \",(_userRoles$formData$r2=userRoles[formData.role])===null||_userRoles$formData$r2===void 0?void 0:_userRoles$formData$r2.description]})})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseCreateDialog,children:\"Abbrechen\"}),/*#__PURE__*/_jsx(Button,{onClick:handleCreateUser,variant:\"contained\",disabled:!formData.username||!formData.name||!formData.email||!formData.password||!formData.confirmPassword||formData.password!==formData.confirmPassword,children:\"Benutzer erstellen\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:editDialogOpen,onClose:handleCloseEditDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Benutzer bearbeiten\"}),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Benutzername\",name:\"username\",value:formData.username,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Name\",name:\"name\",value:formData.name,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"E-Mail\",name:\"email\",type:\"email\",value:formData.email,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Abteilung\",name:\"department\",value:formData.department,onChange:handleInputChange,sx:{mb:2}})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Rolle\"}),/*#__PURE__*/_jsx(Select,{name:\"role\",value:formData.role,onChange:handleInputChange,label:\"Rolle\",children:Object.entries(userRoles).map(_ref4=>{let[key,{label}]=_ref4;return/*#__PURE__*/_jsx(MenuItem,{value:key,children:label},key);})})]}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"active\",checked:formData.active,onChange:handleInputChange,color:\"primary\"}),label:\"Benutzer ist aktiv\"}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",gutterBottom:true,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Erstellt am:\"}),\" \",selectedUser&&formatDate(selectedUser.createdAt)]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Letzter Login:\"}),\" \",selectedUser&&formatDate(selectedUser.lastLogin)]})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Divider,{sx:{mt:2,mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Rolleninformationen\"}),/*#__PURE__*/_jsx(Box,{sx:{pl:2,pr:2},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",gutterBottom:true,children:[/*#__PURE__*/_jsxs(\"strong\",{children:[(_userRoles$formData$r3=userRoles[formData.role])===null||_userRoles$formData$r3===void 0?void 0:_userRoles$formData$r3.label,\":\"]}),\" \",(_userRoles$formData$r4=userRoles[formData.role])===null||_userRoles$formData$r4===void 0?void 0:_userRoles$formData$r4.description]})})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseEditDialog,children:\"Abbrechen\"}),/*#__PURE__*/_jsx(Button,{onClick:handleUpdateUser,variant:\"contained\",disabled:!formData.username||!formData.name||!formData.email,children:\"Speichern\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:deleteDialogOpen,onClose:handleCloseDeleteDialog,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Benutzer l\\xF6schen\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Typography,{children:[\"M\\xF6chten Sie den Benutzer \\\"\",selectedUser===null||selectedUser===void 0?void 0:selectedUser.name,\"\\\" wirklich l\\xF6schen? Dieser Vorgang kann nicht r\\xFCckg\\xE4ngig gemacht werden.\"]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDeleteDialog,children:\"Abbrechen\"}),/*#__PURE__*/_jsx(Button,{onClick:handleDeleteUser,color:\"error\",children:\"L\\xF6schen\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:resetPasswordDialogOpen,onClose:handleCloseResetPasswordDialog,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Passwort zur\\xFCcksetzen\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Typography,{paragraph:true,children:[\"Passwort f\\xFCr Benutzer \\\"\",selectedUser===null||selectedUser===void 0?void 0:selectedUser.name,\"\\\" zur\\xFCcksetzen:\"]}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Neues Passwort\",name:\"password\",type:\"password\",value:formData.password,onChange:handleInputChange,required:true,sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Passwort best\\xE4tigen\",name:\"confirmPassword\",type:\"password\",value:formData.confirmPassword,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseResetPasswordDialog,children:\"Abbrechen\"}),/*#__PURE__*/_jsx(Button,{onClick:handleResetPassword,variant:\"contained\",disabled:!formData.password||!formData.confirmPassword||formData.password!==formData.confirmPassword,children:\"Passwort zur\\xFCcksetzen\"})]})]})]});};export default UserManagement;","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Button","TextField","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Tooltip","Chip","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","InputLabel","Select","MenuItem","Grid","Switch","FormControlLabel","Divider","CircularProgress","Alert","useTheme","InputAdornment","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Lock","LockIcon","LockOpen","LockOpenIcon","Search","SearchIcon","AdminPanelSettings","AdminIcon","Settings","SettingsIcon","ThumbUp","ApproverIcon","Person","UserIcon","Visibility","ReadOnlyIcon","MoreVert","MoreIcon","FilterList","FilterIcon","format","de","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","userRoles","admin","label","icon","color","description","approver","user","readonly","generateDummyUsers","users","_id","username","email","name","role","department","active","createdAt","Date","lastLogin","departments","roles","i","Math","floor","random","length","createdDate","setDate","getDate","lastLoginDate","push","UserManagement","_userRoles$formData$r","_userRoles$formData$r2","_userRoles$formData$r3","_userRoles$formData$r4","theme","setUsers","filteredUsers","setFilteredUsers","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","searchTerm","setSearchTerm","roleFilter","setRoleFilter","statusFilter","setStatusFilter","createDialogOpen","setCreateDialogOpen","editDialogOpen","setEditDialogOpen","deleteDialogOpen","setDeleteDialogOpen","resetPasswordDialogOpen","setResetPasswordDialogOpen","selectedUser","setSelectedUser","formData","setFormData","password","confirmPassword","fetchUsers","setTimeout","dummyUsers","console","filtered","searchLower","toLowerCase","filter","includes","handleSearchChange","event","target","value","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","handleInputChange","type","checked","handleOpenCreateDialog","handleCloseCreateDialog","handleOpenEditDialog","handleCloseEditDialog","handleOpenDeleteDialog","handleCloseDeleteDialog","handleOpenResetPasswordDialog","handleCloseResetPasswordDialog","handleCreateUser","alert","newUser","now","handleUpdateUser","updatedUsers","map","handleDeleteUser","handleResetPassword","handleToggleUserStatus","u","formatDate","date","locale","renderRoleChip","roleInfo","size","sx","backgroundColor","renderStatusChip","variant","paginatedUsers","slice","emptyRows","min","p","children","mb","display","justifyContent","alignItems","startIcon","onClick","container","spacing","item","xs","md","fullWidth","placeholder","onChange","InputProps","startAdornment","position","e","Object","entries","_ref","key","width","overflow","severity","m","maxHeight","stickyHeader","align","hover","title","style","height","colSpan","py","flexDirection","fontSize","mt","rowsPerPageOptions","component","count","onPageChange","onRowsPerPageChange","labelRowsPerPage","labelDisplayedRows","_ref2","from","to","open","onClose","maxWidth","dividers","required","_ref3","control","gutterBottom","pl","pr","disabled","_ref4","paragraph"],"sources":["/app/src/components/Admin/UserManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Tooltip,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Switch,\n  FormControlLabel,\n  Divider,\n  CircularProgress,\n  Alert,\n  useTheme,\n  InputAdornment\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Lock as LockIcon,\n  LockOpen as LockOpenIcon,\n  Search as SearchIcon,\n  AdminPanelSettings as AdminIcon,\n  Settings as SettingsIcon,\n  ThumbUp as ApproverIcon,\n  Person as UserIcon,\n  Visibility as ReadOnlyIcon,\n  MoreVert as MoreIcon,\n  FilterList as FilterIcon\n} from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { de } from 'date-fns/locale';\nimport api from '../../services/api';\n\n// Rollen mit Icons und Farben\nconst userRoles = {\n  admin: { \n    label: 'Administrator', \n    icon: <AdminIcon />, \n    color: '#9c27b0',\n    description: 'Vollzugriff auf alle Funktionen des Systems'\n  },\n  'workflow-designer': { \n    label: 'Workflow-Designer', \n    icon: <SettingsIcon />, \n    color: '#2196f3',\n    description: 'Kann Workflows erstellen und bearbeiten'\n  },\n  approver: { \n    label: 'Genehmiger', \n    icon: <ApproverIcon />, \n    color: '#ff9800',\n    description: 'Kann Dokumente in Workflows genehmigen'\n  },\n  user: { \n    label: 'Benutzer', \n    icon: <UserIcon />, \n    color: '#4caf50',\n    description: 'Kann Dokumente hochladen und zugewiesene Aufgaben bearbeiten'\n  },\n  readonly: { \n    label: 'Nur Lesen', \n    icon: <ReadOnlyIcon />, \n    color: '#757575',\n    description: 'Kann nur Dokumente einsehen, zu denen Zugriff gewährt wurde'\n  }\n};\n\n// Generieren von Dummy-Benutzern\nconst generateDummyUsers = () => {\n  const users = [\n    {\n      _id: 'admin1',\n      username: 'admin',\n      email: 'admin@example.com',\n      name: 'Administrator',\n      role: 'admin',\n      department: 'IT',\n      active: true,\n      createdAt: new Date('2023-01-01'),\n      lastLogin: new Date()\n    },\n    {\n      _id: 'designer1',\n      username: 'workflowdesigner',\n      email: 'designer@example.com',\n      name: 'Max Workflow',\n      role: 'workflow-designer',\n      department: 'Prozessmanagement',\n      active: true,\n      createdAt: new Date('2023-01-15'),\n      lastLogin: new Date('2023-06-10')\n    }\n  ];\n  \n  // Weitere Benutzer generieren\n  const departments = ['Buchhaltung', 'Vertrieb', 'Personal', 'Einkauf', 'Marketing', 'Kundenservice'];\n  const roles = ['approver', 'user', 'readonly'];\n  \n  for (let i = 1; i <= 30; i++) {\n    const role = roles[Math.floor(Math.random() * roles.length)];\n    const department = departments[Math.floor(Math.random() * departments.length)];\n    \n    const createdDate = new Date();\n    createdDate.setDate(createdDate.getDate() - Math.floor(Math.random() * 365));\n    \n    const lastLoginDate = new Date();\n    lastLoginDate.setDate(lastLoginDate.getDate() - Math.floor(Math.random() * 30));\n    \n    users.push({\n      _id: `user${i}`,\n      username: `user${i}`,\n      email: `user${i}@example.com`,\n      name: `Benutzer ${i}`,\n      role,\n      department,\n      active: Math.random() > 0.1, // 10% inaktive Benutzer\n      createdAt: createdDate,\n      lastLogin: lastLoginDate\n    });\n  }\n  \n  return users;\n};\n\nconst UserManagement = () => {\n  const theme = useTheme();\n  \n  // State für Benutzerliste\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Pagination-State\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  \n  // Such- und Filter-State\n  const [searchTerm, setSearchTerm] = useState('');\n  const [roleFilter, setRoleFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  \n  // Dialog-States\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [resetPasswordDialogOpen, setResetPasswordDialogOpen] = useState(false);\n  \n  // Ausgewählter Benutzer für Dialoge\n  const [selectedUser, setSelectedUser] = useState(null);\n  \n  // Formular-Daten für neuen Benutzer\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    name: '',\n    password: '',\n    confirmPassword: '',\n    role: 'user',\n    department: '',\n    active: true\n  });\n  \n  // Benutzer laden\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        // In einer realen App würden die Benutzer von der API geladen werden\n        // const response = await api.get('/api/users');\n        \n        // Für Demo-Zwecke verwenden wir Dummy-Daten\n        setTimeout(() => {\n          const dummyUsers = generateDummyUsers();\n          setUsers(dummyUsers);\n          setFilteredUsers(dummyUsers);\n          setLoading(false);\n        }, 1000);\n      } catch (error) {\n        console.error('Fehler beim Laden der Benutzer:', error);\n        setError('Fehler beim Laden der Benutzer. Bitte versuchen Sie es später erneut.');\n        setLoading(false);\n      }\n    };\n    \n    fetchUsers();\n  }, []);\n  \n  // Benutzer filtern\n  useEffect(() => {\n    if (!users.length) return;\n    \n    let filtered = [...users];\n    \n    // Textsuche\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase();\n      filtered = filtered.filter(user => \n        user.username.toLowerCase().includes(searchLower) ||\n        user.name.toLowerCase().includes(searchLower) ||\n        user.email.toLowerCase().includes(searchLower) ||\n        user.department.toLowerCase().includes(searchLower)\n      );\n    }\n    \n    // Rollenfilter\n    if (roleFilter) {\n      filtered = filtered.filter(user => user.role === roleFilter);\n    }\n    \n    // Statusfilter\n    if (statusFilter === 'active') {\n      filtered = filtered.filter(user => user.active);\n    } else if (statusFilter === 'inactive') {\n      filtered = filtered.filter(user => !user.active);\n    }\n    \n    setFilteredUsers(filtered);\n    setPage(0); // Zurück zur ersten Seite bei Filteränderung\n  }, [users, searchTerm, roleFilter, statusFilter]);\n  \n  // Such-Handler\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n  \n  // Pagination-Handler\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  \n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  \n  // Formular-Handler\n  const handleInputChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  \n  // Dialog-Handler\n  const handleOpenCreateDialog = () => {\n    setFormData({\n      username: '',\n      email: '',\n      name: '',\n      password: '',\n      confirmPassword: '',\n      role: 'user',\n      department: '',\n      active: true\n    });\n    setCreateDialogOpen(true);\n  };\n  \n  const handleCloseCreateDialog = () => {\n    setCreateDialogOpen(false);\n  };\n  \n  const handleOpenEditDialog = (user) => {\n    setSelectedUser(user);\n    setFormData({\n      username: user.username,\n      email: user.email,\n      name: user.name,\n      role: user.role,\n      department: user.department,\n      active: user.active,\n      // Passwort nicht setzen bei Bearbeitung\n      password: '',\n      confirmPassword: ''\n    });\n    setEditDialogOpen(true);\n  };\n  \n  const handleCloseEditDialog = () => {\n    setEditDialogOpen(false);\n    setSelectedUser(null);\n  };\n  \n  const handleOpenDeleteDialog = (user) => {\n    setSelectedUser(user);\n    setDeleteDialogOpen(true);\n  };\n  \n  const handleCloseDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n    setSelectedUser(null);\n  };\n  \n  const handleOpenResetPasswordDialog = (user) => {\n    setSelectedUser(user);\n    setFormData({\n      ...formData,\n      password: '',\n      confirmPassword: ''\n    });\n    setResetPasswordDialogOpen(true);\n  };\n  \n  const handleCloseResetPasswordDialog = () => {\n    setResetPasswordDialogOpen(false);\n    setSelectedUser(null);\n  };\n  \n  // CRUD-Operationen\n  const handleCreateUser = () => {\n    // Validierung\n    if (formData.password !== formData.confirmPassword) {\n      alert('Passwörter stimmen nicht überein');\n      return;\n    }\n    \n    // In einer realen App würde hier ein API-Aufruf gemacht werden\n    // await api.post('/api/users', formData);\n    \n    // Für Demo-Zwecke fügen wir den Benutzer lokal hinzu\n    const newUser = {\n      _id: `user${Date.now()}`,\n      username: formData.username,\n      email: formData.email,\n      name: formData.name,\n      role: formData.role,\n      department: formData.department,\n      active: formData.active,\n      createdAt: new Date(),\n      lastLogin: null\n    };\n    \n    setUsers([...users, newUser]);\n    handleCloseCreateDialog();\n    \n    // Erfolgsmeldung\n    alert('Benutzer erfolgreich erstellt');\n  };\n  \n  const handleUpdateUser = () => {\n    // In einer realen App würde hier ein API-Aufruf gemacht werden\n    // await api.put(`/api/users/${selectedUser._id}`, formData);\n    \n    // Für Demo-Zwecke aktualisieren wir den Benutzer lokal\n    const updatedUsers = users.map(user => {\n      if (user._id === selectedUser._id) {\n        return {\n          ...user,\n          username: formData.username,\n          email: formData.email,\n          name: formData.name,\n          role: formData.role,\n          department: formData.department,\n          active: formData.active\n        };\n      }\n      return user;\n    });\n    \n    setUsers(updatedUsers);\n    handleCloseEditDialog();\n    \n    // Erfolgsmeldung\n    alert('Benutzer erfolgreich aktualisiert');\n  };\n  \n  const handleDeleteUser = () => {\n    // In einer realen App würde hier ein API-Aufruf gemacht werden\n    // await api.delete(`/api/users/${selectedUser._id}`);\n    \n    // Für Demo-Zwecke entfernen wir den Benutzer lokal\n    const updatedUsers = users.filter(user => user._id !== selectedUser._id);\n    \n    setUsers(updatedUsers);\n    handleCloseDeleteDialog();\n    \n    // Erfolgsmeldung\n    alert('Benutzer erfolgreich gelöscht');\n  };\n  \n  const handleResetPassword = () => {\n    // Validierung\n    if (formData.password !== formData.confirmPassword) {\n      alert('Passwörter stimmen nicht überein');\n      return;\n    }\n    \n    // In einer realen App würde hier ein API-Aufruf gemacht werden\n    // await api.put(`/api/users/${selectedUser._id}/reset-password`, { password: formData.password });\n    \n    // Für Demo-Zwecke geben wir nur eine Meldung aus\n    alert(`Passwort für Benutzer ${selectedUser.username} wurde zurückgesetzt`);\n    \n    handleCloseResetPasswordDialog();\n  };\n  \n  const handleToggleUserStatus = (user) => {\n    // In einer realen App würde hier ein API-Aufruf gemacht werden\n    // await api.put(`/api/users/${user._id}/toggle-status`);\n    \n    // Für Demo-Zwecke aktualisieren wir den Status lokal\n    const updatedUsers = users.map(u => {\n      if (u._id === user._id) {\n        return {\n          ...u,\n          active: !u.active\n        };\n      }\n      return u;\n    });\n    \n    setUsers(updatedUsers);\n    \n    // Erfolgsmeldung\n    alert(`Benutzer ${user.username} wurde ${user.active ? 'deaktiviert' : 'aktiviert'}`);\n  };\n  \n  // Hilfsfunktionen\n  const formatDate = (date) => {\n    if (!date) return '-';\n    try {\n      return format(new Date(date), 'dd.MM.yyyy', { locale: de });\n    } catch (error) {\n      return 'Ungültiges Datum';\n    }\n  };\n  \n  // Rolle als Chip darstellen\n  const renderRoleChip = (role) => {\n    const roleInfo = userRoles[role] || { label: role, color: '#757575', icon: <UserIcon /> };\n    \n    return (\n      <Chip\n        icon={roleInfo.icon}\n        label={roleInfo.label}\n        size=\"small\"\n        sx={{\n          backgroundColor: `${roleInfo.color}20`,\n          color: roleInfo.color,\n          '& .MuiChip-icon': {\n            color: roleInfo.color\n          }\n        }}\n      />\n    );\n  };\n  \n  // Status als Chip darstellen\n  const renderStatusChip = (active) => {\n    return (\n      <Chip\n        icon={active ? <LockOpenIcon /> : <LockIcon />}\n        label={active ? 'Aktiv' : 'Inaktiv'}\n        size=\"small\"\n        color={active ? 'success' : 'default'}\n        variant={active ? 'filled' : 'outlined'}\n      />\n    );\n  };\n  \n  // Paginierte Benutzer\n  const paginatedUsers = filteredUsers\n    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  \n  // Leere Zeilen für Pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, filteredUsers.length - page * rowsPerPage);\n  \n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h4\">Benutzerverwaltung</Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={handleOpenCreateDialog}\n        >\n          Neuer Benutzer\n        </Button>\n      </Box>\n      \n      {/* Such- und Filterleiste */}\n      <Paper sx={{ p: 2, mb: 3 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} md={4}>\n            <TextField\n              fullWidth\n              placeholder=\"Suchen...\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                )\n              }}\n              size=\"small\"\n            />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel>Rolle</InputLabel>\n              <Select\n                value={roleFilter}\n                onChange={(e) => setRoleFilter(e.target.value)}\n                label=\"Rolle\"\n              >\n                <MenuItem value=\"\">Alle Rollen</MenuItem>\n                {Object.entries(userRoles).map(([key, { label }]) => (\n                  <MenuItem key={key} value={key}>{label}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel>Status</InputLabel>\n              <Select\n                value={statusFilter}\n                onChange={(e) => setStatusFilter(e.target.value)}\n                label=\"Status\"\n              >\n                <MenuItem value=\"\">Alle Status</MenuItem>\n                <MenuItem value=\"active\">Aktiv</MenuItem>\n                <MenuItem value=\"inactive\">Inaktiv</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <Button \n              fullWidth\n              variant=\"outlined\"\n              onClick={() => {\n                setSearchTerm('');\n                setRoleFilter('');\n                setStatusFilter('');\n              }}\n            >\n              Filter zurücksetzen\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      \n      {/* Benutzertabelle */}\n      <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n            <CircularProgress />\n          </Box>\n        ) : error ? (\n          <Alert severity=\"error\" sx={{ m: 2 }}>{error}</Alert>\n        ) : (\n          <>\n            <TableContainer sx={{ maxHeight: 'calc(100vh - 300px)' }}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Benutzername</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>E-Mail</TableCell>\n                    <TableCell>Abteilung</TableCell>\n                    <TableCell>Rolle</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Erstellt am</TableCell>\n                    <TableCell>Letzter Login</TableCell>\n                    <TableCell align=\"right\">Aktionen</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {paginatedUsers.map((user) => (\n                    <TableRow\n                      key={user._id}\n                      hover\n                      sx={{\n                        '&:hover': { backgroundColor: 'action.hover' }\n                      }}\n                    >\n                      <TableCell>{user.username}</TableCell>\n                      <TableCell>{user.name}</TableCell>\n                      <TableCell>{user.email}</TableCell>\n                      <TableCell>{user.department}</TableCell>\n                      <TableCell>{renderRoleChip(user.role)}</TableCell>\n                      <TableCell>{renderStatusChip(user.active)}</TableCell>\n                      <TableCell>{formatDate(user.createdAt)}</TableCell>\n                      <TableCell>{formatDate(user.lastLogin)}</TableCell>\n                      <TableCell align=\"right\">\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                          <Tooltip title=\"Bearbeiten\">\n                            <IconButton onClick={() => handleOpenEditDialog(user)} size=\"small\">\n                              <EditIcon />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Passwort zurücksetzen\">\n                            <IconButton onClick={() => handleOpenResetPasswordDialog(user)} size=\"small\">\n                              <LockOpenIcon />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title={user.active ? 'Deaktivieren' : 'Aktivieren'}>\n                            <IconButton \n                              onClick={() => handleToggleUserStatus(user)}\n                              size=\"small\"\n                              color={user.active ? 'default' : 'primary'}\n                            >\n                              {user.active ? <LockIcon /> : <LockOpenIcon />}\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Löschen\">\n                            <IconButton \n                              onClick={() => handleOpenDeleteDialog(user)} \n                              size=\"small\" \n                              color=\"error\"\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                  \n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={9} />\n                    </TableRow>\n                  )}\n                  \n                  {filteredUsers.length === 0 && (\n                    <TableRow>\n                      <TableCell colSpan={9} align=\"center\" sx={{ py: 3 }}>\n                        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                          <UserIcon sx={{ fontSize: 50, color: 'text.secondary', mb: 1 }} />\n                          <Typography variant=\"h6\" color=\"text.secondary\">\n                            Keine Benutzer gefunden\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            Versuchen Sie, Ihre Suchkriterien anzupassen\n                          </Typography>\n                          <Button \n                            variant=\"outlined\"\n                            onClick={() => {\n                              setSearchTerm('');\n                              setRoleFilter('');\n                              setStatusFilter('');\n                            }}\n                            sx={{ mt: 2 }}\n                          >\n                            Filter zurücksetzen\n                          </Button>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, 50]}\n              component=\"div\"\n              count={filteredUsers.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              labelRowsPerPage=\"Zeilen pro Seite:\"\n              labelDisplayedRows={({ from, to, count }) => \n                `${from}-${to} von ${count !== -1 ? count : `mehr als ${to}`}`\n              }\n            />\n          </>\n        )}\n      </Paper>\n      \n      {/* Dialog: Benutzer erstellen */}\n      <Dialog\n        open={createDialogOpen}\n        onClose={handleCloseCreateDialog}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>Neuen Benutzer erstellen</DialogTitle>\n        <DialogContent dividers>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Benutzername\"\n                name=\"username\"\n                value={formData.username}\n                onChange={handleInputChange}\n                required\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                fullWidth\n                label=\"Name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                required\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                fullWidth\n                label=\"E-Mail\"\n                name=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                required\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                fullWidth\n                label=\"Abteilung\"\n                name=\"department\"\n                value={formData.department}\n                onChange={handleInputChange}\n                sx={{ mb: 2 }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth sx={{ mb: 2 }}>\n                <InputLabel>Rolle</InputLabel>\n                <Select\n                  name=\"role\"\n                  value={formData.role}\n                  onChange={handleInputChange}\n                  label=\"Rolle\"\n                >\n                  {Object.entries(userRoles).map(([key, { label }]) => (\n                    <MenuItem key={key} value={key}>{label}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <TextField\n                fullWidth\n                label=\"Passwort\"\n                name=\"password\"\n                type=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n                required\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                fullWidth\n                label=\"Passwort bestätigen\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                value={formData.confirmPassword}\n                onChange={handleInputChange}\n                required\n                sx={{ mb: 2 }}\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    name=\"active\"\n                    checked={formData.active}\n                    onChange={handleInputChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Benutzer ist aktiv\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Divider sx={{ mt: 2, mb: 2 }} />\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Rolleninformationen\n              </Typography>\n              <Box sx={{ pl: 2, pr: 2 }}>\n                <Typography variant=\"body2\" gutterBottom>\n                  <strong>{userRoles[formData.role]?.label}:</strong> {userRoles[formData.role]?.description}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseCreateDialog}>Abbrechen</Button>\n          <Button \n            onClick={handleCreateUser} \n            variant=\"contained\"\n            disabled={\n              !formData.username || \n              !formData.name || \n              !formData.email ||\n              !formData.password ||\n              !formData.confirmPassword ||\n              formData.password !== formData.confirmPassword\n            }\n          >\n            Benutzer erstellen\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Dialog: Benutzer bearbeiten */}\n      <Dialog\n        open={editDialogOpen}\n        onClose={handleCloseEditDialog}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>Benutzer bearbeiten</DialogTitle>\n        <DialogContent dividers>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Benutzername\"\n                name=\"username\"\n                value={formData.username}\n                onChange={handleInputChange}\n                required\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                fullWidth\n                label=\"Name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                required\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                fullWidth\n                label=\"E-Mail\"\n                name=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                required\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                fullWidth\n                label=\"Abteilung\"\n                name=\"department\"\n                value={formData.department}\n                onChange={handleInputChange}\n                sx={{ mb: 2 }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth sx={{ mb: 2 }}>\n                <InputLabel>Rolle</InputLabel>\n                <Select\n                  name=\"role\"\n                  value={formData.role}\n                  onChange={handleInputChange}\n                  label=\"Rolle\"\n                >\n                  {Object.entries(userRoles).map(([key, { label }]) => (\n                    <MenuItem key={key} value={key}>{label}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControlLabel\n                control={\n                  <Switch\n                    name=\"active\"\n                    checked={formData.active}\n                    onChange={handleInputChange}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Benutzer ist aktiv\"\n              />\n              <Box sx={{ mt: 2 }}>\n                <Typography variant=\"body2\" gutterBottom>\n                  <strong>Erstellt am:</strong> {selectedUser && formatDate(selectedUser.createdAt)}\n                </Typography>\n                <Typography variant=\"body2\">\n                  <strong>Letzter Login:</strong> {selectedUser && formatDate(selectedUser.lastLogin)}\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={12}>\n              <Divider sx={{ mt: 2, mb: 2 }} />\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Rolleninformationen\n              </Typography>\n              <Box sx={{ pl: 2, pr: 2 }}>\n                <Typography variant=\"body2\" gutterBottom>\n                  <strong>{userRoles[formData.role]?.label}:</strong> {userRoles[formData.role]?.description}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseEditDialog}>Abbrechen</Button>\n          <Button \n            onClick={handleUpdateUser} \n            variant=\"contained\"\n            disabled={\n              !formData.username || \n              !formData.name || \n              !formData.email\n            }\n          >\n            Speichern\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Dialog: Benutzer löschen */}\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={handleCloseDeleteDialog}\n      >\n        <DialogTitle>Benutzer löschen</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Möchten Sie den Benutzer \"{selectedUser?.name}\" wirklich löschen?\n            Dieser Vorgang kann nicht rückgängig gemacht werden.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDeleteDialog}>Abbrechen</Button>\n          <Button onClick={handleDeleteUser} color=\"error\">\n            Löschen\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Dialog: Passwort zurücksetzen */}\n      <Dialog\n        open={resetPasswordDialogOpen}\n        onClose={handleCloseResetPasswordDialog}\n      >\n        <DialogTitle>Passwort zurücksetzen</DialogTitle>\n        <DialogContent>\n          <Typography paragraph>\n            Passwort für Benutzer \"{selectedUser?.name}\" zurücksetzen:\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Neues Passwort\"\n            name=\"password\"\n            type=\"password\"\n            value={formData.password}\n            onChange={handleInputChange}\n            required\n            sx={{ mb: 2 }}\n          />\n          <TextField\n            fullWidth\n            label=\"Passwort bestätigen\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            value={formData.confirmPassword}\n            onChange={handleInputChange}\n            required\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseResetPasswordDialog}>Abbrechen</Button>\n          <Button \n            onClick={handleResetPassword} \n            variant=\"contained\"\n            disabled={\n              !formData.password ||\n              !formData.confirmPassword ||\n              formData.password !== formData.confirmPassword\n            }\n          >\n            Passwort zurücksetzen\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default UserManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}