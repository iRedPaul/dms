{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import jwtDecode from'jwt-decode';import api from'../services/api';// Auth-Kontext erstellen\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[loading,setLoading]=useState(true);const navigate=useNavigate();// Beim ersten Laden überprüfen, ob ein gültiges Token vorhanden ist\nuseEffect(()=>{const checkAuth=async()=>{if(token){try{// Token auf Gültigkeit prüfen\nconst decodedToken=jwtDecode(token);const currentTime=Date.now()/1000;if(decodedToken.exp<currentTime){// Token ist abgelaufen\nlogout();}else{// API-Header für Token setzen\napi.defaults.headers.common['Authorization']=`Bearer ${token}`;// Benutzerdaten abrufen\nconst response=await api.get('/api/auth/me');setUser(response.data);}}catch(error){console.error('Authentifizierungsfehler:',error);logout();}}setLoading(false);};checkAuth();},[token]);// Login-Funktion\nconst login=async(username,password)=>{try{const response=await api.post('/api/auth/login',{username,password});const{token:newToken,user:userData}=response.data;// Token und Benutzerdaten speichern\nlocalStorage.setItem('token',newToken);setToken(newToken);setUser(userData);// API-Header für Token setzen\napi.defaults.headers.common['Authorization']=`Bearer ${newToken}`;return{success:true};}catch(error){var _error$response,_error$response$data;console.error('Login-Fehler:',error);return{success:false,message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Fehler bei der Anmeldung'};}};// Logout-Funktion\nconst logout=()=>{localStorage.removeItem('token');setToken(null);setUser(null);delete api.defaults.headers.common['Authorization'];navigate('/login');};// Passwort ändern\nconst changePassword=async(currentPassword,newPassword)=>{try{await api.put('/api/auth/change-password',{currentPassword,newPassword});return{success:true};}catch(error){var _error$response2,_error$response2$data;return{success:false,message:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Fehler beim Ändern des Passworts'};}};// Prüfen, ob Benutzer eine bestimmte Rolle hat\nconst hasRole=requiredRole=>{if(!user)return false;if(Array.isArray(requiredRole)){return requiredRole.includes(user.role);}return user.role===requiredRole;};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,token,loading,login,logout,changePassword,hasRole,isAuthenticated:!!user},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jwtDecode","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","navigate","checkAuth","decodedToken","currentTime","Date","now","exp","logout","defaults","headers","common","response","get","data","error","console","login","username","password","post","newToken","userData","setItem","success","_error$response","_error$response$data","message","removeItem","changePassword","currentPassword","newPassword","put","_error$response2","_error$response2$data","hasRole","requiredRole","Array","isArray","includes","role","Provider","value","isAuthenticated"],"sources":["/app/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport api from '../services/api';\n\n// Auth-Kontext erstellen\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Beim ersten Laden überprüfen, ob ein gültiges Token vorhanden ist\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          // Token auf Gültigkeit prüfen\n          const decodedToken = jwtDecode(token);\n          const currentTime = Date.now() / 1000;\n          \n          if (decodedToken.exp < currentTime) {\n            // Token ist abgelaufen\n            logout();\n          } else {\n            // API-Header für Token setzen\n            api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n            \n            // Benutzerdaten abrufen\n            const response = await api.get('/api/auth/me');\n            setUser(response.data);\n          }\n        } catch (error) {\n          console.error('Authentifizierungsfehler:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, [token]);\n\n  // Login-Funktion\n  const login = async (username, password) => {\n    try {\n      const response = await api.post('/api/auth/login', { username, password });\n      const { token: newToken, user: userData } = response.data;\n      \n      // Token und Benutzerdaten speichern\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n      \n      // API-Header für Token setzen\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Login-Fehler:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Fehler bei der Anmeldung'\n      };\n    }\n  };\n\n  // Logout-Funktion\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    delete api.defaults.headers.common['Authorization'];\n    navigate('/login');\n  };\n\n  // Passwort ändern\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.put('/api/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Fehler beim Ändern des Passworts'\n      };\n    }\n  };\n\n  // Prüfen, ob Benutzer eine bestimmte Rolle hat\n  const hasRole = (requiredRole) => {\n    if (!user) return false;\n    \n    if (Array.isArray(requiredRole)) {\n      return requiredRole.includes(user.role);\n    }\n    \n    return user.role === requiredRole;\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        token,\n        loading,\n        login,\n        logout,\n        changePassword,\n        hasRole,\n        isAuthenticated: !!user\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}