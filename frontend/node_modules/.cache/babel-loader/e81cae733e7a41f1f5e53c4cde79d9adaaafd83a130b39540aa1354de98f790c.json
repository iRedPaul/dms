{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import ReactFlow,{Controls,Background,useNodesState,useEdgesState,addEdge,MiniMap}from'react-flow-renderer';import{useParams,useNavigate}from'react-router-dom';import{Box,Paper,Typography,TextField,Button,Grid,Divider,Alert,Snackbar,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,IconButton,Tooltip,FormControl,InputLabel,Select,MenuItem}from'@mui/material';import{Save as SaveIcon,PlayArrow as StartIcon,Add as AddIcon,Delete as DeleteIcon,Help as HelpIcon}from'@mui/icons-material';// Import der benutzerdefinierten Knotentypen\nimport StepNodes from'./WorkflowNodeTypes';import WorkflowProperties from'./WorkflowProperties';import api from'../../../services/api';// Sidepanel für Knotenauswahl und -eigenschaften\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Sidebar=_ref=>{let{onDragStart}=_ref;const nodeTypes=[{type:'upload',label:'Dokument-Upload',description:'Erlaubt das Hochladen neuer Dokumente'},{type:'form',label:'Formular',description:'Felder für die Dateneingabe'},{type:'approval',label:'Genehmigung',description:'Genehmigungsschritt durch einen Benutzer'},{type:'notification',label:'Benachrichtigung',description:'Sendet Benachrichtigungen an Benutzer'},{type:'condition',label:'Bedingung',description:'Verzweigung basierend auf Bedingungen'},{type:'archive',label:'Archivierung',description:'Archiviert Dokumente'}];return/*#__PURE__*/_jsxs(Box,{sx:{p:2,borderRight:1,borderColor:'divider',width:250,height:'100%',overflowY:'auto'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"Workflow-Elemente\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:1,direction:\"column\",children:nodeTypes.map(node=>/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2,cursor:'grab','&:hover':{backgroundColor:'action.hover'}},elevation:2,onDragStart:e=>onDragStart(e,node.type),draggable:true,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:node.label}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:node.description})]})},node.type))})]});};const initialNodes=[];const initialEdges=[];const WorkflowDesigner=()=>{const{id}=useParams();const navigate=useNavigate();const[nodes,setNodes,onNodesChange]=useNodesState(initialNodes);const[edges,setEdges,onEdgesChange]=useEdgesState(initialEdges);const[reactFlowInstance,setReactFlowInstance]=useState(null);const[selectedNode,setSelectedNode]=useState(null);const[workflow,setWorkflow]=useState({name:'',description:'',documentType:'any',isActive:true});const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[isLoading,setIsLoading]=useState(false);const[openConfirmDialog,setOpenConfirmDialog]=useState(false);// Knotentypen initialisieren\nconst nodeTypes=StepNodes;// Workflow laden, wenn ID vorhanden\nuseEffect(()=>{if(id&&id!=='new'){loadWorkflow(id);}},[id]);// Workflow aus der API laden\nconst loadWorkflow=async workflowId=>{try{setIsLoading(true);const response=await api.get(`/api/workflows/${workflowId}`);const workflowData=response.data;setWorkflow({name:workflowData.name,description:workflowData.description,documentType:workflowData.documentType,isActive:workflowData.isActive});// Knoten aus den Workflow-Schritten erstellen\nconst flowNodes=workflowData.steps.map((step,index)=>({id:`${index}`,type:step.type,position:step.position||{x:100+index*200,y:100},data:{label:step.name,step}}));// Verbindungen aus den Workflow-Verbindungen erstellen\nconst flowEdges=workflowData.connections.map((conn,index)=>({id:`e${index}`,source:`${conn.source.stepIndex}`,target:`${conn.target.stepIndex}`,sourceHandle:conn.source.connector,targetHandle:conn.target.connector}));setNodes(flowNodes);setEdges(flowEdges);}catch(error){console.error('Fehler beim Laden des Workflows:',error);setError('Der Workflow konnte nicht geladen werden.');}finally{setIsLoading(false);}};// Verbindungen zwischen Knoten hinzufügen\nconst onConnect=useCallback(params=>setEdges(eds=>addEdge(params,eds)),[setEdges]);// Elemente per Drag & Drop hinzufügen\nconst onDragOver=useCallback(event=>{event.preventDefault();event.dataTransfer.dropEffect='move';},[]);const onDrop=useCallback(event=>{event.preventDefault();const type=event.dataTransfer.getData('application/reactflow');if(!type)return;const position=reactFlowInstance.screenToFlowPosition({x:event.clientX,y:event.clientY});const newNode={id:`${nodes.length}`,type,position,data:{label:`${type.charAt(0).toUpperCase()+type.slice(1)} ${nodes.length+1}`,step:{name:`${type.charAt(0).toUpperCase()+type.slice(1)} ${nodes.length+1}`,type,description:'',assignedTo:{type:'role',value:''},position}}};setNodes(nds=>nds.concat(newNode));},[reactFlowInstance,nodes,setNodes]);// Knoten auswählen\nconst onNodeClick=useCallback((event,node)=>{setSelectedNode(node);},[]);// Daten des ausgewählten Knotens aktualisieren\nconst updateNodeData=updatedData=>{setNodes(nds=>nds.map(node=>{if(node.id===selectedNode.id){return{...node,data:{...node.data,label:updatedData.name,step:updatedData}};}return node;}));};// Knoten entfernen\nconst removeNode=()=>{if(!selectedNode)return;// Alle mit dem Knoten verbundenen Kanten entfernen\nsetEdges(eds=>eds.filter(edge=>edge.source!==selectedNode.id&&edge.target!==selectedNode.id));// Knoten entfernen\nsetNodes(nds=>nds.filter(node=>node.id!==selectedNode.id));// Auswahl zurücksetzen\nsetSelectedNode(null);};// Workflow speichern\nconst saveWorkflow=async()=>{try{setIsLoading(true);// Workflow-Schritte aus den Knoten extrahieren\nconst steps=nodes.map(node=>({...node.data.step,position:node.position}));// Workflow-Verbindungen aus den Kanten extrahieren\nconst connections=edges.map(edge=>({source:{stepIndex:parseInt(edge.source),connector:edge.sourceHandle||'default'},target:{stepIndex:parseInt(edge.target),connector:edge.targetHandle||'default'}}));const workflowData={...workflow,steps,connections};let response;if(id&&id!=='new'){// Bestehenden Workflow aktualisieren\nresponse=await api.put(`/api/workflows/${id}`,workflowData);setSuccess('Workflow erfolgreich aktualisiert');}else{// Neuen Workflow erstellen\nresponse=await api.post('/api/workflows',workflowData);setSuccess('Workflow erfolgreich erstellt');navigate(`/admin/workflows/${response.data._id}`);}}catch(error){var _error$response,_error$response$data;console.error('Fehler beim Speichern des Workflows:',error);setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Der Workflow konnte nicht gespeichert werden.');}finally{setIsLoading(false);}};// Drag-Start-Event für das Hinzufügen neuer Knoten\nconst onDragStart=(event,nodeType)=>{event.dataTransfer.setData('application/reactflow',nodeType);event.dataTransfer.effectAllowed='move';};return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',height:'calc(100vh - 64px)'},children:[/*#__PURE__*/_jsx(Paper,{sx:{p:2,mb:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Workflow-Name\",value:workflow.name,onChange:e=>setWorkflow({...workflow,name:e.target.value}),required:true,variant:\"outlined\",size:\"small\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Beschreibung\",value:workflow.description,onChange:e=>setWorkflow({...workflow,description:e.target.value}),variant:\"outlined\",size:\"small\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:2,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"document-type-label\",children:\"Dokumententyp\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"document-type-label\",value:workflow.documentType,label:\"Dokumententyp\",onChange:e=>setWorkflow({...workflow,documentType:e.target.value}),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"any\",children:\"Beliebig\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"invoice\",children:\"Rechnung\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"contract\",children:\"Vertrag\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"report\",children:\"Bericht\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"form\",children:\"Formular\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:2,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(SaveIcon,{}),onClick:saveWorkflow,disabled:isLoading||!workflow.name,fullWidth:true,children:\"Speichern\"})})]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexGrow:1,height:'100%'},children:[/*#__PURE__*/_jsx(Sidebar,{onDragStart:onDragStart}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1,height:'100%'},children:/*#__PURE__*/_jsxs(ReactFlow,{nodes:nodes,edges:edges,onNodesChange:onNodesChange,onEdgesChange:onEdgesChange,onConnect:onConnect,onInit:setReactFlowInstance,onDrop:onDrop,onDragOver:onDragOver,onNodeClick:onNodeClick,nodeTypes:nodeTypes,fitView:true,children:[/*#__PURE__*/_jsx(Controls,{}),/*#__PURE__*/_jsx(MiniMap,{nodeStrokeWidth:3}),/*#__PURE__*/_jsx(Background,{gap:12,size:1})]})}),selectedNode&&/*#__PURE__*/_jsxs(Box,{sx:{width:300,p:2,borderLeft:1,borderColor:'divider',overflow:'auto'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Eigenschaften\"}),/*#__PURE__*/_jsx(Tooltip,{title:\"Knoten l\\xF6schen\",children:/*#__PURE__*/_jsx(IconButton,{color:\"error\",onClick:()=>setOpenConfirmDialog(true),children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]}),/*#__PURE__*/_jsx(Divider,{sx:{mb:2}}),/*#__PURE__*/_jsx(WorkflowProperties,{node:selectedNode,updateNodeData:updateNodeData})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:!!error,autoHideDuration:6000,onClose:()=>setError(null),anchorOrigin:{vertical:'bottom',horizontal:'center'},children:/*#__PURE__*/_jsx(Alert,{onClose:()=>setError(null),severity:\"error\",sx:{width:'100%'},children:error})}),/*#__PURE__*/_jsx(Snackbar,{open:!!success,autoHideDuration:3000,onClose:()=>setSuccess(null),anchorOrigin:{vertical:'bottom',horizontal:'center'},children:/*#__PURE__*/_jsx(Alert,{onClose:()=>setSuccess(null),severity:\"success\",sx:{width:'100%'},children:success})}),/*#__PURE__*/_jsxs(Dialog,{open:openConfirmDialog,onClose:()=>setOpenConfirmDialog(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Knoten l\\xF6schen\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{children:\"M\\xF6chten Sie diesen Workflow-Schritt wirklich l\\xF6schen? Alle verbundenen Kanten werden ebenfalls entfernt.\"})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenConfirmDialog(false),children:\"Abbrechen\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>{removeNode();setOpenConfirmDialog(false);},color:\"error\",autoFocus:true,children:\"L\\xF6schen\"})]})]})]});};export default WorkflowDesigner;","map":{"version":3,"names":["React","useState","useEffect","useCallback","ReactFlow","Controls","Background","useNodesState","useEdgesState","addEdge","MiniMap","useParams","useNavigate","Box","Paper","Typography","TextField","Button","Grid","Divider","Alert","Snackbar","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","IconButton","Tooltip","FormControl","InputLabel","Select","MenuItem","Save","SaveIcon","PlayArrow","StartIcon","Add","AddIcon","Delete","DeleteIcon","Help","HelpIcon","StepNodes","WorkflowProperties","api","jsx","_jsx","jsxs","_jsxs","Sidebar","_ref","onDragStart","nodeTypes","type","label","description","sx","p","borderRight","borderColor","width","height","overflowY","children","variant","mb","container","spacing","direction","map","node","item","cursor","backgroundColor","elevation","e","draggable","color","initialNodes","initialEdges","WorkflowDesigner","id","navigate","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","selectedNode","setSelectedNode","workflow","setWorkflow","name","documentType","isActive","error","setError","success","setSuccess","isLoading","setIsLoading","openConfirmDialog","setOpenConfirmDialog","loadWorkflow","workflowId","response","get","workflowData","data","flowNodes","steps","step","index","position","x","y","flowEdges","connections","conn","source","stepIndex","target","sourceHandle","connector","targetHandle","console","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","getData","screenToFlowPosition","clientX","clientY","newNode","length","charAt","toUpperCase","slice","assignedTo","value","nds","concat","onNodeClick","updateNodeData","updatedData","removeNode","filter","edge","saveWorkflow","parseInt","put","post","_id","_error$response","_error$response$data","message","nodeType","setData","effectAllowed","display","flexDirection","alignItems","xs","md","fullWidth","onChange","required","size","labelId","startIcon","onClick","disabled","flexGrow","onInit","fitView","nodeStrokeWidth","gap","borderLeft","overflow","justifyContent","title","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","autoFocus"],"sources":["/app/src/components/Admin/WorkflowBuilder/WorkflowDesigner.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ReactFlow, {\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n  MiniMap\n} from 'react-flow-renderer';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Divider,\n  Alert,\n  Snackbar,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Tooltip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\nimport {\n  Save as SaveIcon,\n  PlayArrow as StartIcon,\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Help as HelpIcon\n} from '@mui/icons-material';\n\n// Import der benutzerdefinierten Knotentypen\nimport StepNodes from './WorkflowNodeTypes';\nimport WorkflowProperties from './WorkflowProperties';\nimport api from '../../../services/api';\n\n// Sidepanel für Knotenauswahl und -eigenschaften\nconst Sidebar = ({ onDragStart }) => {\n  const nodeTypes = [\n    { type: 'upload', label: 'Dokument-Upload', description: 'Erlaubt das Hochladen neuer Dokumente' },\n    { type: 'form', label: 'Formular', description: 'Felder für die Dateneingabe' },\n    { type: 'approval', label: 'Genehmigung', description: 'Genehmigungsschritt durch einen Benutzer' },\n    { type: 'notification', label: 'Benachrichtigung', description: 'Sendet Benachrichtigungen an Benutzer' },\n    { type: 'condition', label: 'Bedingung', description: 'Verzweigung basierend auf Bedingungen' },\n    { type: 'archive', label: 'Archivierung', description: 'Archiviert Dokumente' }\n  ];\n\n  return (\n    <Box sx={{ p: 2, borderRight: 1, borderColor: 'divider', width: 250, height: '100%', overflowY: 'auto' }}>\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Workflow-Elemente\n      </Typography>\n      <Grid container spacing={1} direction=\"column\">\n        {nodeTypes.map((node) => (\n          <Grid item key={node.type}>\n            <Paper\n              sx={{\n                p: 2,\n                cursor: 'grab',\n                '&:hover': { backgroundColor: 'action.hover' }\n              }}\n              elevation={2}\n              onDragStart={(e) => onDragStart(e, node.type)}\n              draggable\n            >\n              <Typography variant=\"subtitle1\">{node.label}</Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {node.description}\n              </Typography>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nconst initialNodes = [];\nconst initialEdges = [];\n\nconst WorkflowDesigner = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [workflow, setWorkflow] = useState({\n    name: '',\n    description: '',\n    documentType: 'any',\n    isActive: true\n  });\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\n\n  // Knotentypen initialisieren\n  const nodeTypes = StepNodes;\n\n  // Workflow laden, wenn ID vorhanden\n  useEffect(() => {\n    if (id && id !== 'new') {\n      loadWorkflow(id);\n    }\n  }, [id]);\n\n  // Workflow aus der API laden\n  const loadWorkflow = async (workflowId) => {\n    try {\n      setIsLoading(true);\n      const response = await api.get(`/api/workflows/${workflowId}`);\n      const workflowData = response.data;\n      \n      setWorkflow({\n        name: workflowData.name,\n        description: workflowData.description,\n        documentType: workflowData.documentType,\n        isActive: workflowData.isActive\n      });\n\n      // Knoten aus den Workflow-Schritten erstellen\n      const flowNodes = workflowData.steps.map((step, index) => ({\n        id: `${index}`,\n        type: step.type,\n        position: step.position || { x: 100 + index * 200, y: 100 },\n        data: {\n          label: step.name,\n          step\n        }\n      }));\n\n      // Verbindungen aus den Workflow-Verbindungen erstellen\n      const flowEdges = workflowData.connections.map((conn, index) => ({\n        id: `e${index}`,\n        source: `${conn.source.stepIndex}`,\n        target: `${conn.target.stepIndex}`,\n        sourceHandle: conn.source.connector,\n        targetHandle: conn.target.connector\n      }));\n\n      setNodes(flowNodes);\n      setEdges(flowEdges);\n    } catch (error) {\n      console.error('Fehler beim Laden des Workflows:', error);\n      setError('Der Workflow konnte nicht geladen werden.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Verbindungen zwischen Knoten hinzufügen\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  // Elemente per Drag & Drop hinzufügen\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const type = event.dataTransfer.getData('application/reactflow');\n      if (!type) return;\n\n      const position = reactFlowInstance.screenToFlowPosition({\n        x: event.clientX,\n        y: event.clientY\n      });\n\n      const newNode = {\n        id: `${nodes.length}`,\n        type,\n        position,\n        data: {\n          label: `${type.charAt(0).toUpperCase() + type.slice(1)} ${nodes.length + 1}`,\n          step: {\n            name: `${type.charAt(0).toUpperCase() + type.slice(1)} ${nodes.length + 1}`,\n            type,\n            description: '',\n            assignedTo: { type: 'role', value: '' },\n            position\n          }\n        }\n      };\n\n      setNodes((nds) => nds.concat(newNode));\n    },\n    [reactFlowInstance, nodes, setNodes]\n  );\n\n  // Knoten auswählen\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n\n  // Daten des ausgewählten Knotens aktualisieren\n  const updateNodeData = (updatedData) => {\n    setNodes((nds) =>\n      nds.map((node) => {\n        if (node.id === selectedNode.id) {\n          return {\n            ...node,\n            data: {\n              ...node.data,\n              label: updatedData.name,\n              step: updatedData\n            }\n          };\n        }\n        return node;\n      })\n    );\n  };\n\n  // Knoten entfernen\n  const removeNode = () => {\n    if (!selectedNode) return;\n\n    // Alle mit dem Knoten verbundenen Kanten entfernen\n    setEdges((eds) =>\n      eds.filter(\n        (edge) => edge.source !== selectedNode.id && edge.target !== selectedNode.id\n      )\n    );\n\n    // Knoten entfernen\n    setNodes((nds) => nds.filter((node) => node.id !== selectedNode.id));\n    \n    // Auswahl zurücksetzen\n    setSelectedNode(null);\n  };\n\n  // Workflow speichern\n  const saveWorkflow = async () => {\n    try {\n      setIsLoading(true);\n\n      // Workflow-Schritte aus den Knoten extrahieren\n      const steps = nodes.map((node) => ({\n        ...node.data.step,\n        position: node.position\n      }));\n\n      // Workflow-Verbindungen aus den Kanten extrahieren\n      const connections = edges.map((edge) => ({\n        source: {\n          stepIndex: parseInt(edge.source),\n          connector: edge.sourceHandle || 'default'\n        },\n        target: {\n          stepIndex: parseInt(edge.target),\n          connector: edge.targetHandle || 'default'\n        }\n      }));\n\n      const workflowData = {\n        ...workflow,\n        steps,\n        connections\n      };\n\n      let response;\n      if (id && id !== 'new') {\n        // Bestehenden Workflow aktualisieren\n        response = await api.put(`/api/workflows/${id}`, workflowData);\n        setSuccess('Workflow erfolgreich aktualisiert');\n      } else {\n        // Neuen Workflow erstellen\n        response = await api.post('/api/workflows', workflowData);\n        setSuccess('Workflow erfolgreich erstellt');\n        navigate(`/admin/workflows/${response.data._id}`);\n      }\n    } catch (error) {\n      console.error('Fehler beim Speichern des Workflows:', error);\n      setError(error.response?.data?.message || 'Der Workflow konnte nicht gespeichert werden.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Drag-Start-Event für das Hinzufügen neuer Knoten\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData('application/reactflow', nodeType);\n    event.dataTransfer.effectAllowed = 'move';\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: 'calc(100vh - 64px)' }}>\n      {/* Header */}\n      <Paper sx={{ p: 2, mb: 2 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} md={4}>\n            <TextField\n              fullWidth\n              label=\"Workflow-Name\"\n              value={workflow.name}\n              onChange={(e) => setWorkflow({ ...workflow, name: e.target.value })}\n              required\n              variant=\"outlined\"\n              size=\"small\"\n            />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextField\n              fullWidth\n              label=\"Beschreibung\"\n              value={workflow.description}\n              onChange={(e) => setWorkflow({ ...workflow, description: e.target.value })}\n              variant=\"outlined\"\n              size=\"small\"\n            />\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel id=\"document-type-label\">Dokumententyp</InputLabel>\n              <Select\n                labelId=\"document-type-label\"\n                value={workflow.documentType}\n                label=\"Dokumententyp\"\n                onChange={(e) => setWorkflow({ ...workflow, documentType: e.target.value })}\n              >\n                <MenuItem value=\"any\">Beliebig</MenuItem>\n                <MenuItem value=\"invoice\">Rechnung</MenuItem>\n                <MenuItem value=\"contract\">Vertrag</MenuItem>\n                <MenuItem value=\"report\">Bericht</MenuItem>\n                <MenuItem value=\"form\">Formular</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<SaveIcon />}\n              onClick={saveWorkflow}\n              disabled={isLoading || !workflow.name}\n              fullWidth\n            >\n              Speichern\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {/* Main Content */}\n      <Box sx={{ display: 'flex', flexGrow: 1, height: '100%' }}>\n        {/* Sidebar */}\n        <Sidebar onDragStart={onDragStart} />\n\n        {/* Flow Designer */}\n        <Box sx={{ flexGrow: 1, height: '100%' }}>\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onInit={setReactFlowInstance}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n            onNodeClick={onNodeClick}\n            nodeTypes={nodeTypes}\n            fitView\n          >\n            <Controls />\n            <MiniMap nodeStrokeWidth={3} />\n            <Background gap={12} size={1} />\n          </ReactFlow>\n        </Box>\n\n        {/* Properties Panel für ausgewählte Knoten */}\n        {selectedNode && (\n          <Box sx={{ width: 300, p: 2, borderLeft: 1, borderColor: 'divider', overflow: 'auto' }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\">Eigenschaften</Typography>\n              <Tooltip title=\"Knoten löschen\">\n                <IconButton color=\"error\" onClick={() => setOpenConfirmDialog(true)}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </Box>\n            <Divider sx={{ mb: 2 }} />\n            <WorkflowProperties\n              node={selectedNode}\n              updateNodeData={updateNodeData}\n            />\n          </Box>\n        )}\n      </Box>\n\n      {/* Snackbar für Fehler und Erfolg */}\n      <Snackbar\n        open={!!error}\n        autoHideDuration={6000}\n        onClose={() => setError(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setError(null)} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <Snackbar\n        open={!!success}\n        autoHideDuration={3000}\n        onClose={() => setSuccess(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setSuccess(null)} severity=\"success\" sx={{ width: '100%' }}>\n          {success}\n        </Alert>\n      </Snackbar>\n\n      {/* Bestätigungsdialog für das Löschen eines Knotens */}\n      <Dialog\n        open={openConfirmDialog}\n        onClose={() => setOpenConfirmDialog(false)}\n      >\n        <DialogTitle>Knoten löschen</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Möchten Sie diesen Workflow-Schritt wirklich löschen? Alle verbundenen Kanten werden ebenfalls entfernt.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenConfirmDialog(false)}>Abbrechen</Button>\n          <Button\n            onClick={() => {\n              removeNode();\n              setOpenConfirmDialog(false);\n            }}\n            color=\"error\"\n            autoFocus\n          >\n            Löschen\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default WorkflowDesigner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}