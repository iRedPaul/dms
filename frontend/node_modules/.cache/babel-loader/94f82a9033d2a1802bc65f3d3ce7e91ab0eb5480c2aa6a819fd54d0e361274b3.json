{"ast":null,"code":"import axios from'axios';// API-Basis-URL (wird von der Nginx-Konfiguration weitergeleitet)\nconst baseURL='/api';// Axios-Instanz mit Basiseinstellungen\nconst api=axios.create({baseURL,timeout:30000,// 30 Sekunden Timeout\nheaders:{'Content-Type':'application/json','Accept':'application/json'}});// Request-Interceptor (z.B. für JWT-Token hinzufügen)\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers['Authorization']=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Response-Interceptor (z.B. für Fehlerbehandlung oder Token-Aktualisierung)\napi.interceptors.response.use(response=>{return response;},error=>{// Automatisches Ausloggen bei 401-Fehlern (Token ungültig/abgelaufen)\nif(error.response&&error.response.status===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","baseURL","api","create","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href"],"sources":["/app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// API-Basis-URL (wird von der Nginx-Konfiguration weitergeleitet)\nconst baseURL = '/api';\n\n// Axios-Instanz mit Basiseinstellungen\nconst api = axios.create({\n  baseURL,\n  timeout: 30000, // 30 Sekunden Timeout\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Request-Interceptor (z.B. für JWT-Token hinzufügen)\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response-Interceptor (z.B. für Fehlerbehandlung oder Token-Aktualisierung)\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Automatisches Ausloggen bei 401-Fehlern (Token ungültig/abgelaufen)\n    if (error.response && error.response.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,OAAO,CAAG,MAAM,CAEtB;AACA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBF,OAAO,CACPG,OAAO,CAAE,KAAK,CAAE;AAChBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,QAAQ,CAAE,kBACZ,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,CAAG,UAAUK,KAAK,EAAE,CACrD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAI,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAX,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,EAAK,CACZ,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACAH,KAAK,EAAK,CACT;AACA,GAAIA,KAAK,CAACG,QAAQ,EAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CACnDN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC,CAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CAEA,MAAO,CAAAP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}