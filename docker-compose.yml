version: '3.8'

services:
  # MongoDB Datenbank
  mongo:
    image: mongo:latest
    container_name: dms-db
    restart: always
    volumes:
      - dms_mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 30dgBP2TGxmcC4bT
    networks:
      - dms-network

  # Backend API
  backend:
    image: node:18-alpine
    container_name: dms-api
    restart: always
    working_dir: /app
    volumes:
      - /opt/dms-system/backend:/app
    ports:
      - "4000:4000"
    environment:
      - MONGO_URI=mongodb://root:secure_password@mongo:27017/dms?authSource=admin
      - JWT_SECRET=gXoGFL3EyOpawidI
      - ADMIN_USER=admin
      - ADMIN_PASSWORD=admin
      - PORT=4000
      - NODE_ENV=production
      - STORAGE_SERVICE_URL=http://storage:5000
    command: sh -c "npm install && npm start"
    depends_on:
      - mongo
    networks:
      - dms-network

  # Document Storage Service
  storage:
    image: node:18-alpine
    container_name: dms-storage
    restart: always
    working_dir: /app
    volumes:
      - /opt/dms-system/storage-service:/app
      - dms_document_storage:/storage
    environment:
      - MONGO_URI=mongodb://root:secure_password@mongo:27017/dms?authSource=admin
      - JWT_SECRET=gXoGFL3EyOpawidI
      - PORT=5000
      - STORAGE_PATH=/storage
    command: sh -c "npm install && npm start"
    depends_on:
      - mongo
    networks:
      - dms-network

  # Frontend Build (temporärer Container für den Build-Prozess)
  frontend-build:
    image: node:18-alpine
    container_name: dms-web-builder
    working_dir: /app
    volumes:
      - /opt/dms-system/frontend:/app
    command: >
      sh -c "
        echo 'Installiere Dependencies...' &&
        npm install --legacy-peer-deps &&
        echo 'Installiere zusätzliche Dependencies...' &&
        npm install ajv@8.12.0 ajv-keywords@5.1.0 --legacy-peer-deps &&
        echo 'Erstelle optimierten Production Build...' &&
        npm run build &&
        echo 'Build abgeschlossen!'
      "
    networks:
      - dms-network

  # Frontend Web Server
  frontend:
    image: nginx:alpine
    container_name: dms-web
    restart: always
    volumes:
      - /opt/dms-system/frontend/build:/usr/share/nginx/html
      - /opt/dms-system/frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - backend
      - storage
      - frontend-build
    networks:
      - dms-network

networks:
  dms-network:
    driver: bridge

volumes:
  dms_mongo_data:
    external: false
  dms_document_storage:
    external: false
