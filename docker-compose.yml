---

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dms-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=https://dms.home-lan.cc/api
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - dms-network

  nginx:
    image: nginx:alpine
    container_name: dms-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/build:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - dms-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dms-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - MONGO_URI=mongodb://mongo:27017/dms
      - JWT_SECRET=r778AABeNpdBp7u7FWNJrkkkTC
      - ADMIN_USER=admin
      - ADMIN_PASSWORD=Test,123
      - NODE_ENV=production
      - CORS_ORIGIN=https://dms.home-lan.cc
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
      - /app/node_modules
    depends_on:
      - mongo
    networks:
      - dms-network

  mongo:
    image: mongo:5
    container_name: dms-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=dms
    volumes:
      - mongo-data:/data/db
    networks:
      - dms-network

volumes:
  mongo-data:
    driver: local

networks:
  dms-network:
    driver: bridge
